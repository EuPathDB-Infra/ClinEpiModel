<wdkModel>
    <recordClassSet name="LightTrapRecordClasses">

      <recordClass name="LightTrapRecordClass" urlName="light-trap" displayName="Light Trap Collection"> 


            <!-- primary key definition -->
            <primaryKey aliasQueryRef="LightTrapAttributes.LightTrapAlias">
                <columnRef>source_id</columnRef>
                <columnRef>project_id</columnRef>
              </primaryKey>

              <idAttribute name="primary_key" displayName="Collection Barcode">
                <text>
                    <![CDATA[
                      $$source_id$$
                    ]]>
                </text>                
            </idAttribute>
	     <!-- =============================================================== -->
      <!--  Step Analysis Plugins -->
      <!-- =============================================================== -->

             <stepAnalysisRef name="light-trap-plots" excludeProjects="EuPathDB"/> 

      <!-- =============================================================== -->
      <!--   Reporters -->  
      <!-- =============================================================== -->

<!--

          <reporter name="tabular" displayName="Summary - tab delimited" scopes=""
                    implementation="org.gusdb.wdk.model.report.AttributesTabularReporter"/>

          <reporter name="fullRecord" displayName="Text: choose from columns and/or tables"  scopes=""
                    implementation="org.gusdb.wdk.model.report.FullRecordReporter"/>
-->

      <!-- =================================================================== -->
      <!--  Text Attributes  ++++++++-->
      <!-- =================================================================== -->


<!--
  <textAttribute name="overview" displayName="Overview" excludeProjects="EuPathDB" internal="true" inReportMaker="false">
    <text>
      <![CDATA[
       Lighttrap <i>$$source_id$$<i> from household <a href="showRecord.do?name=DwellingRecordClasses.DwellingRecordClass&project_id=@PROJECT_ID@&primary_key=$$EUPATH_0000094$$">$$EUPATH_0000094$$</a> in $$EUPATH_0000054$$ subcounty.
]]>
    </text>
  </textAttribute>
-->

  <textAttribute name="overview" displayName="Overview" excludeProjects="EuPathDB" internal="true" inReportMaker="false">
    <text>
      <![CDATA[

TODO: use the one above
]]>
    </text>
  </textAttribute>

<!--
  <attributeQueryRef ref="LightTrapAttributes.LightTrapAttributes" attributeMetaQueryRef="LightTrapAttributes.LightTrapAttributesMeta"/>
-->
        <table name="Characteristics"
               displayName="Lighttrap Characteristics"
               queryRef="LightTrapTables.Characteristics">

            <columnAttribute name="name"  inReportMaker="false" internal="true"/>
             <columnAttribute name="parent_category" displayName="Category"/>
            <columnAttribute name="category" displayName="Characteristic"/>
            <columnAttribute name="value" displayName="Value"/>
        </table>
<!--
        <table name="UnCategorisedCharacteristics"
               displayName="Lighttrap Characteristics"
               queryRef="LightTrapTables.UnCategorisedCharacteristics">
            <columnAttribute name="source_id"  inReportMaker="false" internal="true"/>
            <columnAttribute name="name"  inReportMaker="false" internal="true"/>
            <columnAttribute name="category" displayName="Category"/>
            <columnAttribute name="value" displayName="Value"/>
        </table>
-->
    </recordClass>
    </recordClassSet>



      <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
      <!-- Attribute queries -->  
      <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <querySet name="LightTrapAttributes" queryType="attribute" doNotTest="true"  
              isCacheable='false'
              excludeProjects="TrichDB">
      
      <testRowCountSql>
select count(*) from apidbtuning.LightTrapAttributes
       </testRowCountSql>
       <sqlQuery name="LightTrapAlias" doNotTest="true">
         <column name="source_id"/>
         <column name="project_id"/>
         <column name="old_source_id"/>
         <column name="old_project_id"/>
         <sql>
             SELECT source_id, '@PROJECT_ID@' AS project_id, source_id as old_source_id, '@PROJECT_ID@' AS old_project_id FROM ApidbTuning.LightTrapAttributes
         </sql>
       </sqlQuery>

       <sqlQuery name="LightTrapAttributes" attributeMetaQueryRef="LightTrapAttributes.LightTrapAttributesMeta">
         <column name="source_id"/>
         <column name="project_id"/>

         <!-- WARNING:  if you change this you must also change in the MetaQuery BELOW -->
         <sqlParamValue name="dwellingSourceIds"><![CDATA[EUPATH_0000054]]></sqlParamValue>

          <sql excludeProjects="EuPathDB">
            <![CDATA[
                     select pa.name as source_id, '@PROJECT_ID@' as project_id, pa.*,
                     da.*
                     from APIDBTUNING.PROTOCOLAPPNODEIO io
                        , apidbtuning.lighttrapattributes pa
                        , (select protocol_app_node_id as hh_protocol_app_node_id, name as parent, &&dwellingSourceIds&& from apidbtuning.dwellingattributes) da
                     where pa.PROTOCOL_APP_NODE_ID = io.OUTPUT_NODE_ID (+)
                     and io.input_node_id = da.hh_PROTOCOL_APP_NODE_ID (+)
            ]]>
          </sql>  
         </sqlQuery>

       <sqlQuery name="LightTrapAttributesMeta" isCacheable="false">
          <column name="name" />
          <column name="display_name" />
          <column name="help" />
          <column name="plugin_name" />
          <column name="plugin_display" />
          <column name="plugin_description" />
          <column name="plugin_implementation" />
          <column name="plugin_view" />
          <column name="plugin_properties" />

         <!-- WARNING:  if you change this you must also change in the AttributeQuery ABOVE -->
          <sqlParamValue name="dwellingSourceIds"><![CDATA['EUPATH_0000054']]></sqlParamValue>

         <sql>
            <![CDATA[
                     select meta.display_name, meta.name, meta.help, 
                            decode(meta.type, 'string', 'wordCloud', 'number', 'histogram', null) as plugin_name,
                            decode(meta.type, 'string', 'Word Cloud', 'number', 'Histogram', null) as plugin_display,
                            decode(meta.type, 'string', 'Display the terms in the attribute as word clouds', 'number', 'Display a histogram of the values', null) as plugin_description,
                            decode(meta.type, 'string', 'org.gusdb.wdk.model.record.attribute.plugin.WordCloudAttributePlugin', 'number', 'org.gusdb.wdk.model.record.attribute.plugin.HistogramAttributePlugin', null) as plugin_implementation,
                            decode(meta.type, 'string', '/wdk/jsp/results/wordCloud.jsp', 'number', '/wdk/jsp/results/histogram.jsp', null) as plugin_view,
                            decode(meta.type, 'string', '[{"name":"min-word-length","value":"1"},{"name":"common-words","value":""},{"name":"exclude-numbers","value":"false"}]', null) as plugin_properties
                     from (select distinct ot.name as display_name, ot.source_id as name, ot.DEFINITION as help, mt.type
                           from APIDBTUNING.PANCHARACTERISTICMETADATA m, sres.ontologyterm ot, apidbtuning.metadatatype mt
                           where m.protocol_app_node_type = 'CDC light trap assay'
                           and ot.ontology_term_id = m.TERM_ID
                           and mt.term_id = m.term_id
                           union
                           select distinct ot.name as display_name, ot.source_id as name, ot.DEFINITION as help, mt.type
                           from APIDBTUNING.PANPROTOCOLMETADATA m, sres.ontologyterm ot, apidbtuning.metadatatype mt
                           where m.protocol_app_node_type = 'CDC light trap assay'
                           and ot.ontology_term_id = m.TERM_ID
                           and mt.term_id = m.term_id
                           union
                           select 'Name' as display_name, 'name' as name, '' as help, '' as type from dual
                           union
                           select ot.name as display_name, ot.source_id as name, ot.definition as help, mt.type from apidbtuning.metadatatype mt, sres.ontologyterm ot where ot.source_id = mt.source_id and mt.source_id in (&&dwellingSourceIds&&)
                           ) meta
            ]]>
         </sql>

         </sqlQuery>



    </querySet>


    <querySet name="LightTrapTables" queryType="table" 
              isCacheable='false'
              excludeProjects="TrichDB">
      
      <sqlQuery name="Characteristics"  isCacheable='false'>
            <column name="source_id"/>
         <column name="project_id"/>
            <column name="name"/>
            <column name="parent_category"/>
            <column name="category"/>
            <column name="value"/>
       <sql>
          <![CDATA[
   select distinct 
                 anc.source_id, 
                 anc.source_id as name,
                 anc.value,
                 pc.parent_category,
                nvl(os.ontology_synonym,anc.category) as category
            from ApidbTuning.AppNodeCharacteristics anc
                 ,ApidbTuning.MetaDataSpec mds
                 ,Sres.OntologySynonym os
                 ,( select listagg(display.spec_value,' : ') within group (order by tier desc) as parent_category,
                           root as ontology_term_id
                      from ( select distinct property as term, 
                                             ontology_term_id, 
                                             spec_value as parent_term,
                                             connect_by_root ontology_term_id as root,
                                             to_number(level) as  tier
                               from (select * from apidbtuning.metadataspec  where spec_property = 'parent' ) mds
                              start with property in ( select distinct property from ApidbTuning.metadataspec where spec_property = 'leaf' )
                            connect by prior spec_value = property
                            )mds, 
                            (select distinct property,
                                             ontology_term_id,
                                             spec_value 
                              from ApidbTuning.metadataspec 
                             where spec_property = 'display' )display
                    where tier != 1 
                      and mds.ontology_term_id = display.ontology_term_id
                    group by root) pc
                    
              where anc.type = 'light_trap_data'
             and anc.category = mds.property
             and anc.category != 'parent_id'
             and anc.category != 'information content entity'
              and lower(os.ontology_synonym) not like '%do not display%'
              and lower(anc.category) not like '%do not display%'
             and anc.ontology_term_id = os.ontology_term_id (+)
             and pc.ontology_term_id(+) = anc.ontology_term_id
                       union
           select distinct source_id,
                  source_id as name,
                  value,
                  'dwelling' as parent_category,
                  'household id' as category
            from ApidbTuning.AppNodeCharacteristics
           where category = 'parent_id'
           and type = 'light_trap_data'
           order by source_id, parent_category, category
            ]]>
        </sql>
      </sqlQuery>
<!--      
      <sqlQuery name="UnCategorisedCharacteristics"  isCacheable='false'>
            <column name="source_id"/>
         <column name="project_id"/>
            <column name="name"/>
            <column name="category"/>
            <column name="value"/>
            <sql>
            <![CDATA[
              select distinct
                 anc.source_id,
                 anc.source_id as name,
                 anc.value,
                 anc.category
            from ApidbTuning.AppNodeCharacteristics anc
                 ,ApidbTuning.MetaDataSpec mds
           where anc.type = 'light_trap_data'
             and anc.category = mds.property
             and mds.spec_property = 'categorized'
             and mds.spec_value = 'false'
             and anc.category != 'parent_id'
           order by source_id, category

            ]]>
            </sql>
        </sqlQuery>
-->

    </querySet>

</wdkModel>
