<wdkModel>

  <paramSet name="lightTrapParams">
    
    <enumParam name="type"
               prompt="type"
               multiPick="false"
               quote="true"
               visible="false">
      <help>this is internal</help>
      <enumList>
        <enumValue default="true">
          <term>dwelling</term>
          <internal>dwelling</internal>
        </enumValue>
      </enumList>
    </enumParam>


    <filterParamNew name="geographic_region" 
                    metadataQueryRef="DwellingVQ.RegionMetaData"
                    summaryMetadataQueryRef="lightTrapVQ.SummaryRegionMetaData"
                    ontologyQueryRef="DwellingVQ.RegionOntology"
                    prompt="Dwelling"
                    trimMetadataTerms="false">
      <help>
        Select light trap collections based on geographic region. 
      </help>
     </filterParamNew>
     
     <filterParamNew name="dwellings_nf" 
                    ontologyQueryRef="lightTrapVQ.DwellingOntology"
                    metadataQueryRef="lightTrapVQ.DwellingMetaData"
                    summaryMetadataQueryRef="lightTrapVQ.SummaryDwellingMetaData"
                    backgroundQueryRef="lightTrapVQ.DwellingMetaDataBkgd"
                    prompt="Dwelling"
                    trimMetadataTerms="false"
                    dependedParamRef="lightTrapParams.geographic_region,dwellingParams.date_range">
      <help>
        Select light trap collections based on the characteristics of the dwelling where collection was performed. 
      </help>
    </filterParamNew>

    <filterParamNew name="lighttraps_nf" 
                    ontologyQueryRef="lightTrapVQ.LightTrapOntology"
                    metadataQueryRef="lightTrapVQ.LightTrapMetaData"
                    backgroundQueryRef="lightTrapVQ.LightTrapMetaDataBkgd"
                    prompt="Dwelling"
                    trimMetadataTerms="false"
                    dependedParamRef="lightTrapParams.geographic_region,dwellingParams.date_range,lightTrapParams.dwellings_nf">
      <help>
        Select light trap collections based on the characteristics of the dwelling where collection was performed. 
      </help>
    </filterParamNew>


    <datasetParam name="collectionsBySourceID"
		  recordClassRef="LightTrapRecordClasses.LightTrapRecordClass"
		  prompt="Source ID input set">
      <help><![CDATA[Input a set of source ID's, or upload a file <br><br>

               It can be delimited by a comma, semi colon or any white space<br><br>

               Its possible that not all ID's in the list will be found in the database
               due to a number of reasons such as unavailable ID maping. Its also currently not
               possible to inform which ID's did not match anything in the database]]></help>
      <suggest includeProjects="INIT" default="FILL" />
      <suggest default="T3-WSWX" />      
    </datasetParam>

    <answerParam name="lighttrap_result"
                  prompt="Input Result Set"
                  readonly="true"
                  visible="false">
       <recordClass ref="LightTrapRecordClasses.LightTrapRecordClass" />
    </answerParam>

 <enumParam name="district"
               prompt="Study site "
               multiPick="true"
               quote="true"
               visible="true">
      <help>Choose the study sites (districts) for your search.</help>
      <enumList>
        <enumValue default="true">
          <term>Tororo</term>
          <internal>tororo</internal>
        </enumValue>
        <enumValue default="true">
          <term>Kanungu</term>
          <internal>kanungu</internal>
        </enumValue>  
        <enumValue default="true">
          <term>Jinja</term>
          <internal>jinja</internal>
        </enumValue>  
      </enumList>
    </enumParam>

  </paramSet>

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!--  Vocab queries-->  
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

 <querySet name="lightTrapVQ" queryType="vocab" isCacheable="true">

      <sqlQuery name="SummaryRegionMetaData">
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
                 select distinct lta.protocol_app_node_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
 from ApidbTuning.MetaDataWithoutNulls m, apidbtuning.protocolappnodeio io, apidbtuning.lighttrapattributes lta
 where m.dataset_name = 'ISASimple_ICEMR_PRISM_cohort_RSRC'
 and m.category = 'Household'
 and m.source_id = 'EUPATH_0000054'
 and m.protocol_app_node_id = io.input_node_id
 and io.output_node_id = lta.protocol_app_node_id
          ]]>
    </sql>
    </sqlQuery>

   <sqlQuery name="DwellingOntology">
     <paramRef ref="dwellingParams.date_range" />  
     <paramRef ref="lightTrapParams.geographic_region" />  
     <column name="ontology_term_name"/>
     <column name="parent_ontology_term_name"/>
     <column name="display_name"/>
     <column name="description"/>
     <column name="type"/>
     <column name="units"/>
     <column name="precision"/>
     <column name="is_range"/>
    <sql>
         <![CDATA[
   with leaf as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
from apidbtuning.metadataontology o, 
(select distinct term
 from apidbtuning.metadata
 where dataset_name = 'ISASimple_ICEMR_PRISM_cohort_RSRC'
 and category = 'Household') md
 where o.ontology_term_name = md.term),
first as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from leaf where parent_ontology_term_name is not null) par
 where o.ontology_term_name = par.parent_ontology_term_name),
 second as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from first where parent_ontology_term_name is not null) gpar
 where o.ontology_term_name = gpar.parent_ontology_term_name)
 select * from leaf
 union
 select * from first
 union
 select * from second
 union
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from second where parent_ontology_term_name is not null) ggpar
 where o.ontology_term_name = ggpar.parent_ontology_term_name
 union
 select 'average anopheles' as ontology_term_name, null as parent_ontology_term_name, 'Average Anopheles Collected' as display_name, 'Average number of Anopheles collected in monthly CDC light traps during the dates of this search' as description, null as units, 'number' as type, 1 as is_range,
 null as precision from dual
         ]]>
    </sql>
   </sqlQuery>
          
    <sqlQuery name="DwellingMetaDataBkgd">
     <paramRef ref="dwellingParams.date_range" />  
     <paramRef ref="lightTrapParams.geographic_region" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
         <![CDATA[
select distinct m.protocol_app_node_id as internal, term as ontology_term_name, string_value, number_value, date_value
 from ApidbTuning.MetaDataWithoutNulls m
 where m.dataset_name = 'ISASimple_ICEMR_PRISM_cohort_RSRC'
 and m.category = 'Household'
 union
 select da.protocol_app_node_id, 'average anopheles' as ontology_term_name, null as string_value, 
   round(avg(nvl(EUPATH_0000192,0)+nvl(EUPATH_0000193,0)+nvl(EUPATH_0000204,0)+nvl(EUPATH_0000205,0)),1) as number_value, null as date_value
  from apidbtuning.householdattributes da, apidbtuning.protocolappnodeio io, apidbtuning.lighttrapattributes la
  where da.protocol_app_node_id = io.input_node_id
  and la.protocol_app_node_id = io.output_node_id
  group by da.protocol_app_node_id
          ]]>
    </sql>
    </sqlQuery>

    <sqlQuery name="DwellingMetaData" isCacheable="true">
      <paramRef ref="dwellingParams.date_range" />  
      <paramRef ref="lightTrapParams.geographic_region" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
         <![CDATA[
select distinct m.protocol_app_node_id as internal, term as ontology_term_name, string_value, number_value, date_value
 from ApidbTuning.MetaDataWithoutNulls m
 where m.protocol_app_node_id in ($$geographic_region$$)
 union
 select da.protocol_app_node_id, 'average anopheles' as ontology_term_name, null as string_value, 
   round(avg(nvl(EUPATH_0000192,0)+nvl(EUPATH_0000193,0)+nvl(EUPATH_0000204,0)+nvl(EUPATH_0000205,0)),1) as number_value, null as date_value
  from apidbtuning.householdattributes da, apidbtuning.protocolappnodeio io, apidbtuning.lighttrapattributes la
  where da.protocol_app_node_id in ($$geographic_region$$)
  and da.protocol_app_node_id = io.input_node_id
  and la.protocol_app_node_id = io.output_node_id
  and la.OBI_0001619 >= $$date_range.min$$
  and la.OBI_0001619 <= $$date_range.max$$ 
  group by da.protocol_app_node_id
          ]]>
    </sql>
    </sqlQuery>

    <sqlQuery name="SummaryDwellingMetaData" isCacheable="false">
      <paramRef ref="dwellingParams.date_range" />  
      <paramRef ref="lightTrapParams.geographic_region" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
         <![CDATA[
 select distinct lta.protocol_app_node_id as internal, term as ontology_term_name, string_value, number_value, date_value
 from ApidbTuning.MetaDataWithoutNulls m, apidbtuning.protocolappnodeio io, apidbtuning.lighttrapattributes lta
 where m.protocol_app_node_id in ($$geographic_region$$)
 and m.protocol_app_node_id = io.input_node_id
 and io.output_node_id = lta.protocol_app_node_id
 and lta.OBI_0001619 >= $$date_range.min$$
 and lta.OBI_0001619 <= $$date_range.max$$ 
 union
 select lta.protocol_app_node_id, mos.ontology_term_name, mos.string_value,mos.number_value,mos.date_value
 from
 (select da.protocol_app_node_id, 'average anopheles' as ontology_term_name, null as string_value, 
   round(avg(nvl(EUPATH_0000192,0)+nvl(EUPATH_0000193,0)+nvl(EUPATH_0000204,0)+nvl(EUPATH_0000205,0)),1) as number_value, null as date_value
  from apidbtuning.householdattributes da, apidbtuning.protocolappnodeio io, apidbtuning.lighttrapattributes la
  where da.protocol_app_node_id in ($$geographic_region$$)
  and da.protocol_app_node_id = io.input_node_id
  and la.protocol_app_node_id = io.output_node_id
  and la.OBI_0001619 >= $$date_range.min$$
  and la.OBI_0001619 <= $$date_range.max$$ 
  group by da.protocol_app_node_id) mos, apidbtuning.protocolappnodeio io, apidbtuning.lighttrapattributes lta
  where mos.protocol_app_node_id = io.input_node_id
  and io.output_node_id = lta.protocol_app_node_id
  and lta.OBI_0001619 >= $$date_range.min$$
  and lta.OBI_0001619 <= $$date_range.max$$ 
          ]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="LightTrapOntology">
      <paramRef ref="dwellingParams.date_range" />  
      <paramRef ref="lightTrapParams.geographic_region" />  
      <paramRef ref="lightTrapParams.dwellings_nf" />  
      <column name="ontology_term_name"/>
      <column name="parent_ontology_term_name"/>
      <column name="display_name"/>
      <column name="description"/>
      <column name="type"/>
      <column name="units"/>
      <column name="precision"/>
      <column name="is_range"/>
      <sql>
        <![CDATA[
   with leaf as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
from apidbtuning.metadataontology o, 
(select distinct term
 from apidbtuning.metadata
 where dataset_name = 'ISASimple_ICEMR_PRISM_cohort_RSRC'
 and category = 'CDC light trap assay'
  and source_id != 'EUPATH_0000094') md
 where o.ontology_term_name = md.term),
first as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from leaf where parent_ontology_term_name is not null) par
 where o.ontology_term_name = par.parent_ontology_term_name),
 second as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from first where parent_ontology_term_name is not null) gpar
 where o.ontology_term_name = gpar.parent_ontology_term_name)
 select * from leaf
 union
 select * from first
 union
 select * from second
 union
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from second where parent_ontology_term_name is not null) ggpar
 where o.ontology_term_name = ggpar.parent_ontology_term_name
        ]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="LightTrapMetaData">
      <paramRef ref="dwellingParams.date_range" />  
      <paramRef ref="lightTrapParams.geographic_region" />  
      <paramRef ref="lightTrapParams.dwellings_nf" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
select distinct m.protocol_app_node_id as internal, term as ontology_term_name, string_value, number_value, date_value
 from ApidbTuning.MetaDataWithoutNulls m, apidbtuning.protocolappnodeio io, apidbtuning.lighttrapattributes lta
 where m.dataset_name = 'ISASimple_ICEMR_PRISM_cohort_RSRC'
 and m.category = 'CDC light trap assay'
 and m.protocol_app_node_id = lta.protocol_app_node_id
 and lta.OBI_0001619 >= $$date_range.min$$
 and lta.OBI_0001619 <= $$date_range.max$$ 
 and m.protocol_app_node_id = io.output_node_id
 and io.input_node_id in ($$dwellings_nf$$)
        ]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="LightTrapMetaDataBkgd">
      <paramRef ref="dwellingParams.date_range" />  
      <paramRef ref="lightTrapParams.geographic_region" />  
      <paramRef ref="lightTrapParams.dwellings_nf" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
select distinct m.protocol_app_node_id as internal, term as ontology_term_name, string_value, number_value, date_value
 from ApidbTuning.MetaDataWithoutNulls m
 where m.dataset_name = 'ISASimple_ICEMR_PRISM_cohort_RSRC'
 and m.category = 'CDC light trap assay'
        ]]>
      </sql>
    </sqlQuery>

 </querySet>

</wdkModel>
