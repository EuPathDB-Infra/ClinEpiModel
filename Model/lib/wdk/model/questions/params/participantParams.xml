<wdkModel>

  <paramSet name="participantParams">
    
    <enumParam name="type"
               prompt="type"
               multiPick="false"
               quote="true"
               visible="false">
      <help>this is internal</help>
      <enumList>
        <enumValue default="true">
          <term>person</term>
          <internal>person</internal>
        </enumValue>
        <enumValue>
          <term>household</term>
          <internal>household</internal>
        </enumValue>  
      </enumList>
    </enumParam>

    <stringParam name="dataset"
		 prompt="Study: "
		 number="false">
      <help>Specify the dataset for this study</help>
      <suggest default="Default Study"/>
    </stringParam>

    <numberParam name="duration_observation"
		 prompt="Days of observation &gt;= "
		 integer="true"
                 min="1"
                 max="2000">
      <help>Specify the minimum number of days that the participant was observed (ie, met the age/date criteria).</help>
      <suggest default="1"/>
    </numberParam>

    <numberRangeParam name="visit_count"
                      prompt="Number of Matching Visits: "
                      integer="true"
                      min="1"
                      max="1000">
      <help>Set the range of number of visits that match your search criteria.</help>
      <!--         <suggest default="{'min': '1', 'max': '10'}" />  -->
    </numberRangeParam>

        <numberRangeParam name="visits_per_year"
                      prompt="Visits per year:"
                      integer="false"
                      min="0"
                      max="365"
                      step="0.1">
      <help>Set the range of number of visits that match your search criteria.</help>
      <!--         <suggest default="{'min': '1', 'max': '10'}" />  -->
    </numberRangeParam>

    <numberRangeParam name="parasite_density"
                      prompt="Parasite Density (geometric mean):"
                      integer="true"
                      min="0"
                      max="1000000">
      <help>Set the range of days between visits to compare to visits selected in the previous step</help>
      <!--         <suggest default="{'min': '1', 'max': '10'}" />  -->
    </numberRangeParam> 

    <datasetParam name="participantsBySourceID" 
		  recordClassRef="ParticipantRecordClasses.ParticipantRecordClass"
		  prompt="Source ID input set">
      <help><![CDATA[Input a set of source IDs, or upload a file<br><br>

             It can be delimited by a comma, semi colon or any white space.<br><br>
             Its possible that not all the IDs in the list will be found in the database
             due to anumber of reasons such as unavailable ID mapping. It is currenly not
             possible to inform which IDs did not match anything in the database]]> </help>
     <suggest includeProjects="INIT" default="FILL" />
     <suggest default="3001" />
      
    </datasetParam>

    <answerParam name="participant_result"
                 prompt="Input Result Set"
                 readonly="true"
                 visible="false">
      <recordClass ref="ParticipantRecordClasses.ParticipantRecordClass" />
    </answerParam>

    <!--************************************************************-->
    <!--   PRISM section ... should be injected  -->
    <!--************************************************************-->

       <filterParamNew name="geographic_region" 
                       metadataQueryRef="ParticipantVQ.RegionMetaData"
                       ontologyQueryRef="ParticipantVQ.RegionOntology"
                       prompt="Participants"
                       trimMetadataTerms="false">
         <help>
           Select participants based on their geographic region. 
         </help>
    </filterParamNew>

       <filterParamNew name="dwellings_nf" 
                      metadataQueryRef="ParticipantVQ.DwellingMetaData"
                      summaryMetadataQueryRef="ParticipantVQ.DwellingMetaDataSummary"
                      ontologyQueryRef="ParticipantVQ.DwellingOntology"
                      backgroundQueryRef="ParticipantVQ.DwellingMetaDataBkgd"
                      useSummaryMetadataQueryForInternalValue="true"
                      prompt="Households"
                      dependedParamRef="participantParams.visits_visitage_metadata_nf,clinicalVisitParams.visit_date,participantParams.duration_observation,participantParams.geographic_region,participantParams.participants_nf"
                      trimMetadataTerms="false">
         <help>
              Select participants based on the characteristics of the household where they live. 
         </help>
       </filterParamNew>

       <filterParamNew name="participants_nf" 
                      metadataQueryRef="ParticipantVQ.ParticipantMetaData"
                      ontologyQueryRef="ParticipantVQ.ParticipantOntology"
                      backgroundQueryRef="ParticipantVQ.ParticipantMetaDataBkgd"
                      prompt="Participants"
                      trimMetadataTerms="false"
                      dependedParamRef="participantParams.visits_visitage_metadata_nf,clinicalVisitParams.visit_date,participantParams.duration_observation,participantParams.geographic_region">
         <help>
              Select participants based on their characteristics. 
         </help>
       </filterParamNew>

       <filterParamNew name="visits_nf" 
                    metadataQueryRef="ParticipantVQ.VisitMetaData"
                    summaryMetadataQueryRef="ParticipantVQ.VisitSummaryMetaData"
                    ontologyQueryRef="ParticipantVQ.VisitOntology"
                    backgroundQueryRef="ParticipantVQ.VisitMetaDataBkgd"
                    prompt="Clincial Visits"
                    trimMetadataTerms="false"
                    dependedParamRef="participantParams.visits_visitage_metadata_nf,clinicalVisitParams.visit_date,participantParams.duration_observation,participantParams.dwellings_nf,participantParams.geographic_region,participantParams.participants_nf">
      <help>
        Select participants based on their visit characteristics. 
      </help>
    </filterParamNew>

    <filterParamNew name="visits_visitage_metadata_nf" 
                      metadataQueryRef="ParticipantVQ.ClinicalVisitAgeMetaDataNf"
                      summaryMetadataQueryRef="ParticipantVQ.SummaryClinicalVisitAgeMetaDataNf"
                      ontologyQueryRef="ParticipantVQ.ClinicalVisitAgeOntologyNf"
                      backgroundQueryRef="ParticipantVQ.ClinicalVisitAgeMetaDataBkgdNf"
                      prompt="Age at visit"
                      dependedParamRef="participantParams.geographic_region,clinicalVisitParams.visit_date"
                      trimMetadataTerms="false">
         <help>
              Select reference samples. 
         </help>
       </filterParamNew>


    <!--************************************************************-->
    <!--   MAL-ED section ... should be injected  -->
    <!--************************************************************-->

       <filterParamNew name="geographic_region_maled" 
                       metadataQueryRef="ParticipantVQ.RegionMetaData_maled"
                       ontologyQueryRef="ParticipantVQ.RegionOntology_maled"
                       prompt="Participants"
                       dependedParamRef="participantParams.dataset"
                       trimMetadataTerms="false">
         <help>
           Select participants based on their geographic region. 
         </help>
    </filterParamNew>

       <filterParamNew name="dwellings_nf_maled" 
                      metadataQueryRef="ParticipantVQ.DwellingMetaData_maled"
                      summaryMetadataQueryRef="ParticipantVQ.DwellingMetaDataSummary_maled"
                      ontologyQueryRef="ParticipantVQ.DwellingOntology_maled"
                      backgroundQueryRef="ParticipantVQ.DwellingMetaDataBkgd_maled"
                      useSummaryMetadataQueryForInternalValue="true"
                      prompt="Households"
                      dependedParamRef="participantParams.dataset,participantParams.visits_visitage_metadata_nf_maled,participantParams.geographic_region_maled,participantParams.participants_nf_maled"
                      trimMetadataTerms="false">
         <help>
              Select participants based on the characteristics of the household where they live. 
         </help>
       </filterParamNew>

       <filterParamNew name="participants_nf_maled" 
                      metadataQueryRef="ParticipantVQ.ParticipantMetaData_maled"
                      ontologyQueryRef="ParticipantVQ.ParticipantOntology_maled"
                      backgroundQueryRef="ParticipantVQ.ParticipantMetaDataBkgd_maled"
                      prompt="Participants"
                      trimMetadataTerms="false"
                      dependedParamRef="participantParams.dataset,participantParams.visits_visitage_metadata_nf_maled,participantParams.geographic_region_maled">
         <help>
              Select participants based on their characteristics. 
         </help>
       </filterParamNew>

       <filterParamNew name="visits_nf_maled" 
                    metadataQueryRef="ParticipantVQ.VisitMetaData_maled"
                    summaryMetadataQueryRef="ParticipantVQ.VisitSummaryMetaData_maled"
                    ontologyQueryRef="ParticipantVQ.VisitOntology_maled"
                    backgroundQueryRef="ParticipantVQ.VisitMetaDataBkgd_maled"
                    prompt="Events"
                    trimMetadataTerms="false"
                    dependedParamRef="participantParams.dataset,participantParams.visits_visitage_metadata_nf_maled,participantParams.dwellings_nf_maled,participantParams.geographic_region_maled,participantParams.participants_nf_maled">
      <help>
        Select participants based on their visit characteristics. 
      </help>
    </filterParamNew>

    <filterParamNew name="visits_visitage_metadata_nf_maled" 
                      ontologyQueryRef="ParticipantVQ.ClinicalVisitAgeOntologyNf_maled"
                      metadataQueryRef="ParticipantVQ.ClinicalVisitAgeMetaDataNf_maled"
                      summaryMetadataQueryRef="ParticipantVQ.SummaryClinicalVisitAgeMetaDataNf_maled"
                      backgroundQueryRef="ParticipantVQ.ClinicalVisitAgeMetaDataBkgdNf_maled"
                      prompt="Events"
                      dependedParamRef="participantParams.dataset,participantParams.geographic_region_maled"
                      trimMetadataTerms="false">
         <help>
              Select reference samples. 
         </help>
       </filterParamNew>



  </paramSet>

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!--  Vocab queries-->  
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

 <querySet name="ParticipantVQ" queryType="vocab" isCacheable="true">

    <!--************************************************************-->
    <!--   PRISM section ... should be injected  -->
    <!--************************************************************-->

   <sqlQuery name="ParticipantOntology">
     <column name="ontology_term_name"/>
     <column name="parent_ontology_term_name"/>
     <column name="display_name"/>
     <column name="description"/>
     <column name="type"/>
     <column name="units"/>
     <column name="precision"/>
     <column name="is_range"/>
    <sql>
         <![CDATA[
with leaf as ( 
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
from apidbtuning.metadataontology o, 
(select distinct term
 from apidbtuning.metadata
 where dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC'
 and category = 'Participant'
 and source_id != 'EUPATH_0000032') md
 where o.ontology_term_name = md.term),
first as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from leaf where parent_ontology_term_name is not null) par
 where o.ontology_term_name = par.parent_ontology_term_name),
 second as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from first where parent_ontology_term_name is not null) gpar
 where o.ontology_term_name = gpar.parent_ontology_term_name)
 select * from leaf
 union
 select * from first
 union
 select * from second
 union
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from second where parent_ontology_term_name is not null) ggpar
 where o.ontology_term_name = ggpar.parent_ontology_term_name
         ]]>
    </sql>
   </sqlQuery>

       <sqlQuery name="ParticipantMetaData" isCacheable="true">
         <paramRef ref="participantParams.visits_visitage_metadata_nf" />
         <paramRef ref="clinicalVisitParams.visit_date" /> 
         <paramRef ref="participantParams.duration_observation" />  
         <paramRef ref="participantParams.geographic_region" />  
     <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
         <![CDATA[
select distinct m.protocol_app_node_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
  from (select min(EUPATH_0000113) as min_age, max(EUPATH_0000113) as max_age
   from apidbtuning.clinicalvisitattributes 
   where protocol_app_node_id in ($$visits_visitage_metadata_nf$$)
   ) age,
   apidbtuning.participantattributes pa, apidbtuning.protocolappnodeio iov, ApidbTuning.MetaDataWithoutNulls m
   where pa.protocol_app_node_id in ($$geographic_region$$)
   AND least(pa.EUPATH_0000152, $$visit_date.max$$, pa.EUPATH_0000032 + ( age.max_age * 365)) - 
       greatest(pa.EUPATH_0000151, $$visit_date.min$$, pa.EUPATH_0000032 + ( age.min_age * 365)) + 1 >= $$duration_observation$$
       and pa.protocol_app_node_id = iov.input_node_id
       and iov.output_node_id in ($$visits_visitage_metadata_nf$$)
       and pa.protocol_app_node_id = m.protocol_app_node_id
       and m.dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC'
       and m.category = 'Participant'
          ]]>
    </sql>
    </sqlQuery>

    <sqlQuery name="ParticipantMetaDataBkgd">
         <paramRef ref="participantParams.visits_visitage_metadata_nf" />
         <paramRef ref="clinicalVisitParams.visit_date" /> 
         <paramRef ref="participantParams.duration_observation" />  
         <paramRef ref="participantParams.geographic_region" />  
     <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
         <![CDATA[
select distinct m.protocol_app_node_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
from ApidbTuning.MetaDataWithoutNulls m
 where m.dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC'
 and m.category = 'Participant'
          ]]>
    </sql>
    </sqlQuery>

    
    <sqlQuery name="VisitOntology">
     <column name="ontology_term_name"/>
     <column name="parent_ontology_term_name"/>
     <column name="display_name"/>
     <column name="description"/>
     <column name="type"/>
     <column name="units"/>
     <column name="precision"/>
     <column name="is_range"/>
    <sql>
         <![CDATA[
with leaf as ( select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
from apidbtuning.metadataontology o, 
(select distinct term
 from apidbtuning.metadata
 where dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC'
 and category in ('Visit','Specimen type')
 and source_id != 'EUPATH_0000094') md
 where o.ontology_term_name = md.term),
first as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from leaf where parent_ontology_term_name is not null) par
 where o.ontology_term_name = par.parent_ontology_term_name),
 second as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from first where parent_ontology_term_name is not null) gpar
 where o.ontology_term_name = gpar.parent_ontology_term_name)
 select * from leaf
 union
 select * from first
 union
 select * from second
 union
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from second where parent_ontology_term_name is not null) ggpar
 where o.ontology_term_name = ggpar.parent_ontology_term_name
         ]]>
    </sql>
   </sqlQuery>

       <sqlQuery name="VisitMetaData" isCacheable="true">
         <paramRef ref="participantParams.visits_visitage_metadata_nf" />
         <paramRef ref="clinicalVisitParams.visit_date" /> 
         <paramRef ref="participantParams.duration_observation" />  
         <paramRef ref="participantParams.dwellings_nf" />  
         <paramRef ref="participantParams.geographic_region" />  
         <paramRef ref="participantParams.participants_nf" />  
         <column name="ontology_term_name"/>
         <column name="internal"/>
         <column name="number_value"/>
         <column name="date_value"/>
         <column name="string_value"/>
         <sql>
           <![CDATA[
with valid as (
select distinct io.output_node_id as visit_id, io.input_node_id as part_id
from apidbtuning.protocolappnodeio io
where io.input_node_id in ($$dwellings_nf$$)
and io.output_node_id in ($$visits_visitage_metadata_nf$$)
)
select distinct valid.visit_id as internal, term as ontology_term_name, string_value, number_value, date_value
 from ApidbTuning.MetaDataWithoutNulls m, valid
 where m.dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC'
 and m.category = 'Visit'
 and m.protocol_app_node_id = valid.visit_id
  union
 select valid.visit_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
from ApidbTuning.MetaDataWithoutNulls m, valid, apidbtuning.protocolappnodeio ios
where dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC'
and m.category = 'Specimen type' 
and m.term = 'Specimen type'
and ios.output_node_id = m.protocol_app_node_id
and ios.input_node_id = valid.visit_id
          ]]>
    </sql>
    </sqlQuery>    

    <sqlQuery name="VisitSummaryMetaData" isCacheable="true">
         <paramRef ref="participantParams.visits_visitage_metadata_nf" />
         <paramRef ref="clinicalVisitParams.visit_date" /> 
         <paramRef ref="participantParams.duration_observation" />  
         <paramRef ref="participantParams.dwellings_nf" />  
         <paramRef ref="participantParams.geographic_region" />  
         <paramRef ref="participantParams.participants_nf" />  
         <column name="ontology_term_name"/>
         <column name="internal"/>
         <column name="number_value"/>
         <column name="date_value"/>
         <column name="string_value"/>
         <sql>
           <![CDATA[
select distinct io.input_node_id as internal, term as ontology_term_name, string_value, number_value, date_value
 from ApidbTuning.MetaDataWithoutNulls m, apidbtuning.protocolappnodeio io, apidbtuning.clinicalvisitattributes va
 where m.dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC'
 and m.category = 'Visit'
 and m.protocol_app_node_id = va.protocol_app_node_id
 and io.output_Node_Id = va.protocol_app_node_id
 and va.protocol_app_node_id in ($$visits_visitage_metadata_nf$$)
 and io.input_node_id in ($$dwellings_nf$$)
  union
 select iov.input_node_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
from ApidbTuning.MetaDataWithoutNulls m, apidbtuning.protocolappnodeio iov, apidbtuning.protocolappnodeio ios
where dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC'
and m.category = 'Specimen type' 
and m.term = 'Specimen type'
and ios.output_node_id = m.protocol_app_node_id
and ios.input_node_id in ($$visits_visitage_metadata_nf$$)
and iov.output_node_id = ios.input_node_id
and iov.input_node_id in ($$dwellings_nf$$)
          ]]>
    </sql>
    </sqlQuery>

    <sqlQuery name="VisitMetaDataBkgd">
         <paramRef ref="participantParams.visits_visitage_metadata_nf" />
         <paramRef ref="clinicalVisitParams.visit_date" /> 
         <paramRef ref="participantParams.duration_observation" />  
         <paramRef ref="participantParams.dwellings_nf" />  
         <paramRef ref="participantParams.geographic_region" />  
         <paramRef ref="participantParams.participants_nf" />  
         <column name="ontology_term_name"/>
         <column name="internal"/>
         <column name="number_value"/>
         <column name="date_value"/>
         <column name="string_value"/>
         <sql>
           <![CDATA[
 select distinct protocol_app_node_id as internal, term as ontology_term_name, string_value, number_value, date_value
 from ApidbTuning.MetaDataWithoutNulls 
 where dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC'
 and category = 'Visit'
 union
 select io.input_node_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
from ApidbTuning.MetaDataWithoutNulls m, apidbtuning.protocolappnodeio io
where dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC'
and m.category = 'Specimen type' 
and m.term = 'Specimen type'
and io.output_node_id = m.protocol_app_node_id
          ]]>
    </sql>
    </sqlQuery>

       <sqlQuery name="ClinicalVisitAgeOntologyNf">
         <column name="ontology_term_name"/>
         <column name="parent_ontology_term_name"/>
         <column name="display_name"/>
         <column name="description"/>
         <column name="type"/>
         <column name="units"/>
         <column name="precision"/>
         <column name="is_range"/>
         <sql>
           <![CDATA[
                       select o.ontology_term_name, 'dummy' as parent_ontology_term_name, o.display_name, o.description, o.units,o.type,o.is_range,o.precision
from apidbtuning.metadataontology o
where ontology_term_name = 'Age at time of visit'
union
                 select 'dummy' as ontology_term_name, null as parent_ontology_term_name, 'Dwelling' as display_name, null as description, null as units, 'string' as type, 0 as is_range,
                 null as precision from dual
    ]]>   
        </sql>
      </sqlQuery>
          
   <sqlQuery name="ClinicalVisitAgeMetaDataNf" isCacheable="true">
      <paramRef ref="participantParams.geographic_region" /> 
      <paramRef ref="clinicalVisitParams.visit_date" /> 
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
select distinct pa.output_Node_Id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
 from ApidbTuning.MetaDataWithoutNulls m, apidbtuning.clinicalvisitattributes cva,
 (select distinct io.input_node_id, io.output_node_id
  from apidbtuning.protocolappnodeio io
  where io.input_node_id in ($$geographic_region$$)
  ) pa
 where m.dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC'
 and m.category = 'Visit'
 and m.source_id = 'EUPATH_0000113'
 and pa.output_node_id = m.protocol_app_node_id
 and pa.output_node_id = cva.protocol_app_node_id
 and cva.EUPATH_0000091 >= $$visit_date.min$$
 and cva.EUPATH_0000091 <= $$visit_date.max$$
         ]]>   
      </sql>
   </sqlQuery>

   <sqlQuery name="SummaryClinicalVisitAgeMetaDataNf" isCacheable="true">
      <paramRef ref="participantParams.geographic_region" /> 
      <paramRef ref="clinicalVisitParams.visit_date" /> 
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
select distinct pa.input_node_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
 from ApidbTuning.MetaDataWithoutNulls m, apidbtuning.clinicalvisitattributes cva,
 (select distinct io.input_node_id, io.output_node_id
  from apidbtuning.protocolappnodeio io
  where io.input_node_id in ($$geographic_region$$)
  ) pa
 where m.dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC'
 and m.category = 'Visit'
 and m.source_id = 'EUPATH_0000113'
 and pa.output_node_id = m.protocol_app_node_id
 and pa.output_node_id = cva.protocol_app_node_id
 and cva.EUPATH_0000091 >= $$visit_date.min$$
 and cva.EUPATH_0000091 <= $$visit_date.max$$
         ]]>   
      </sql>
   </sqlQuery>

      <sqlQuery name="ClinicalVisitAgeMetaDataBkgdNf" >
      <paramRef ref="participantParams.geographic_region" /> 
      <paramRef ref="clinicalVisitParams.visit_date" /> 
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
select distinct protocol_app_node_id as internal, term as ontology_term_name, string_value, number_value, date_value
 from apidbtuning.metadata
 where dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC'
 and category = 'Visit'
 and source_id = 'EUPATH_0000113'
          ]]>   
      </sql>
   </sqlQuery>

   <sqlQuery name="RegionOntology">
     <column name="ontology_term_name"/>
     <column name="parent_ontology_term_name"/>
     <column name="display_name"/>
     <column name="description"/>
     <column name="type"/>
     <column name="units"/>
     <column name="precision"/>
     <column name="is_range"/>
    <sql>
         <![CDATA[
                  select o.ontology_term_name, 'dummy' as parent_ontology_term_name, o.display_name, o.description, o.units,o.type,o.is_range,o.precision
                  from apidbtuning.metadataontology o, (select distinct source_id
                  from apidbtuning.metadata
                  where source_id in ('EUPATH_0000054','OBI_0001627','EUPATH_0000452')) ds
                  where ds.source_id = o.ontology_term_source_id
                  union
                  select 'dummy' as ontology_term_name, null as parent_ontology_term_name, 'Dwelling' as display_name, null as description, null as units, 'string' as type, 0 as is_range,
                  null as precision from dual
         ]]>
    </sql>
   </sqlQuery>

    <sqlQuery name="RegionMetaData" >
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
 select pa.protocol_app_node_id as internal, mt.property as ontology_term_name, da.EUPATH_0000054 as string_value, cast(null as number) as number_value, cast(null as date) as date_value
 from apidbtuning.participantattributes pa, apidbtuning.dwellingattributes da, apidbtuning.metadatatype mt
 where pa.EUPATH_0000094 = da.name
 and mt.source_id = 'EUPATH_0000054'
        ]]>
      </sql>
    </sqlQuery>

       <sqlQuery name="DwellingOntology">
        <column name="ontology_term_name"/>
        <column name="parent_ontology_term_name"/>
        <column name="display_name"/>
        <column name="description"/>
        <column name="type"/>
        <column name="units"/>
        <column name="precision"/>
        <column name="is_range"/>
    <sql>
   with leaf as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
from apidbtuning.metadataontology o, 
(select distinct term
 from apidbtuning.metadata
 where dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC'
 and category = 'Dwelling type'
 and source_id != 'EUPATH_0000094') md
 where o.ontology_term_name = md.term),
first as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from leaf where parent_ontology_term_name is not null) par
 where o.ontology_term_name = par.parent_ontology_term_name),
 second as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from first where parent_ontology_term_name is not null) gpar
 where o.ontology_term_name = gpar.parent_ontology_term_name)
 select * from leaf
 union
 select * from first
 union
 select * from second
 union
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from second where parent_ontology_term_name is not null) ggpar
 where o.ontology_term_name = ggpar.parent_ontology_term_name
 union
 select 'average anopheles' as ontology_term_name, null as parent_ontology_term_name, 'Average Anopheles Collected' as display_name, 'Average number of Anopheles collected in monthly CDC light traps during the dates of this search' as description, null as units, 'number' as type, 1 as is_range,
 null as precision from dual
    </sql>
    </sqlQuery>

    <sqlQuery name="DwellingMetaDataSummary" isCacheable="true">
      <paramRef ref="participantParams.visits_visitage_metadata_nf" />
      <paramRef ref="clinicalVisitParams.visit_date" /> 
      <paramRef ref="participantParams.duration_observation" />  
      <paramRef ref="participantParams.geographic_region" />  
      <paramRef ref="participantParams.participants_nf" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
         <![CDATA[
with part as ( select distinct io.input_node_id as dwelling_id, io.output_node_id as part_id
  from apidbtuning.participantattributes pa, apidbtuning.protocolappnodeio io
   where pa.protocol_app_node_id in ($$participants_nf$$)
       and pa.protocol_app_node_id = io.output_node_id)
 select distinct Part.part_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
 from ApidbTuning.MetaDataWithoutNulls m, part
 where m.dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC'
 and m.category = 'Dwelling type'
 and part.dwelling_id = m.protocol_app_node_id
 union
 select part.part_id as internal, 'average anopheles' as ontology_term_name, null as string_value, nvl(mos.avg_anoph,0) as number_value, null as date_value
 from (select da.protocol_app_node_id, round(avg(nvl(EUPATH_0000192,0)+nvl(EUPATH_0000193,0)+nvl(EUPATH_0000204,0)+nvl(EUPATH_0000205,0)),1) as avg_anoph
  from apidbtuning.dwellingattributes da, apidbtuning.protocolappnodeio io, apidbtuning.lighttrapattributes la
  where da.protocol_app_node_id = io.input_node_id
  and la.protocol_app_node_id = io.output_node_id
  and la.OBI_0001619 >= $$visit_date.min$$ 
  and la.OBI_0001619 <= $$visit_date.max$$ 
  group by da.protocol_app_node_id) mos, part
  where part.dwelling_id = mos.protocol_app_node_id(+)
          ]]>
    </sql>    

    </sqlQuery>

    <sqlQuery name="DwellingMetaData" isCacheable="true">
      <paramRef ref="participantParams.visits_visitage_metadata_nf" />
      <paramRef ref="clinicalVisitParams.visit_date" /> 
      <paramRef ref="participantParams.duration_observation" />  
      <paramRef ref="participantParams.geographic_region" />  
      <paramRef ref="participantParams.participants_nf" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
         <![CDATA[
with part as ( select distinct io.input_node_id as dwelling_id, io.output_node_id as part_id
  from apidbtuning.participantattributes pa, apidbtuning.protocolappnodeio io
   where pa.protocol_app_node_id in ($$participants_nf$$)
       and pa.protocol_app_node_id = io.output_node_id)
 select distinct Part.dwelling_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
 from ApidbTuning.MetaDataWithoutNulls m, part
 where m.dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC'
 and m.category = 'Dwelling type'
 and part.dwelling_id = m.protocol_app_node_id
 union
 select part.dwelling_id as internal, 'average anopheles' as ontology_term_name, null as string_value, nvl(mos.avg_anoph,0) as number_value, null as date_value
 from (select da.protocol_app_node_id, round(avg(nvl(EUPATH_0000192,0)+nvl(EUPATH_0000193,0)+nvl(EUPATH_0000204,0)+nvl(EUPATH_0000205,0)),1) as avg_anoph
  from apidbtuning.dwellingattributes da, apidbtuning.protocolappnodeio io, apidbtuning.lighttrapattributes la
  where da.protocol_app_node_id = io.input_node_id
  and la.protocol_app_node_id = io.output_node_id
  and la.OBI_0001619 >= $$visit_date.min$$ 
  and la.OBI_0001619 <= $$visit_date.max$$ 
  group by da.protocol_app_node_id) mos, part
  where part.dwelling_id = mos.protocol_app_node_id(+)
          ]]>
    </sql>    

    </sqlQuery>

    <sqlQuery name="DwellingMetaDataBkgd">
      <paramRef ref="participantParams.visits_visitage_metadata_nf" />
      <paramRef ref="clinicalVisitParams.visit_date" /> 
      <paramRef ref="participantParams.duration_observation" />  
      <paramRef ref="participantParams.geographic_region" />  
      <paramRef ref="participantParams.participants_nf" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
         <![CDATA[
with part as ( select distinct io.input_node_id as dwelling_id, io.output_node_id as part_id
  from apidbtuning.participantattributes pa, apidbtuning.protocolappnodeio io
   where pa.protocol_app_node_id = io.output_node_id)
 select distinct Part.dwelling_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
 from ApidbTuning.MetaDataWithoutNulls m, part
 where m.dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC'
 and m.category = 'Dwelling type'
 and part.dwelling_id = m.protocol_app_node_id
 union
 select part.dwelling_id as internal, 'average anopheles' as ontology_term_name, null as string_value, nvl(mos.avg_anoph,0) as number_value, null as date_value
 from (select da.protocol_app_node_id, round(avg(nvl(EUPATH_0000192,0)+nvl(EUPATH_0000193,0)+nvl(EUPATH_0000204,0)+nvl(EUPATH_0000205,0)),1) as avg_anoph
  from apidbtuning.dwellingattributes da, apidbtuning.protocolappnodeio io, apidbtuning.lighttrapattributes la
  where da.protocol_app_node_id = io.input_node_id
  and la.protocol_app_node_id = io.output_node_id
  group by da.protocol_app_node_id) mos, part
  where part.dwelling_id = mos.protocol_app_node_id(+)
          ]]>
    </sql>    

    </sqlQuery>

    <!--************************************************************-->
    <!--   MAL-ED section ... should be injected  -->
    <!--************************************************************-->

   <sqlQuery name="ParticipantOntology_maled">
     <column name="ontology_term_name"/>
     <column name="parent_ontology_term_name"/>
     <column name="display_name"/>
     <column name="description"/>
     <column name="type"/>
     <column name="units"/>
     <column name="precision"/>
     <column name="is_range"/>
    <sql>
         <![CDATA[
select * from (
with leaf as ( 
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
from apidbtuning.metadataontology o, 
(select distinct term
 from apidbtuning.metadata
 where dataset_name = 'ISASimple_Gates_MAL-ED_stdm_tp_RSRC' --$$dataset$$ 
 and category = 'Participant'
 and source_id != 'EUPATH_0000032') md
 where o.ontology_term_name = md.term),
first as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from leaf where parent_ontology_term_name is not null) par
 where o.ontology_term_name = par.parent_ontology_term_name),
 second as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from first where parent_ontology_term_name is not null) gpar
 where o.ontology_term_name = gpar.parent_ontology_term_name)
 select * from leaf
 union
 select * from first
 union
 select * from second
 union
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from second where parent_ontology_term_name is not null) ggpar
 where o.ontology_term_name = ggpar.parent_ontology_term_name
 ) order by ontology_term_name
         ]]>
    </sql>
   </sqlQuery>

   <sqlQuery name="ParticipantMetaData_maled" isCacheable="true">
     <paramRef ref="participantParams.visits_visitage_metadata_nf_maled" />
      <paramRef ref="participantParams.geographic_region_maled" />  
     <paramRef ref="participantParams.dataset" />  
     <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
         <![CDATA[
select distinct m.protocol_app_node_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
  from apidbtuning.protocolappnodeio iov, ApidbTuning.MetaDataWithoutNulls m
   where iov.output_node_id in ($$visits_visitage_metadata_nf_maled$$)
       and iov.input_type_source_id = 'EUPATH_0000096'
       and iov.input_node_id = m.protocol_app_node_id
       and m.dataset_name = $$dataset$$
       and m.category = 'Participant'
          ]]>
    </sql>
    </sqlQuery>

    <sqlQuery name="ParticipantMetaDataBkgd_maled">
      <paramRef ref="participantParams.visits_visitage_metadata_nf_maled" />
      <paramRef ref="participantParams.geographic_region_maled" />  
      <paramRef ref="participantParams.dataset" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
         <![CDATA[
select distinct m.protocol_app_node_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
from ApidbTuning.MetaDataWithoutNulls m
 where m.dataset_name = $$dataset$$
 and m.category = 'Participant'
          ]]>
    </sql>
    </sqlQuery>

    
    <sqlQuery name="VisitOntology_maled">
      <column name="ontology_term_name"/>
      <column name="parent_ontology_term_name"/>
      <column name="display_name"/>
      <column name="description"/>
      <column name="type"/>
      <column name="units"/>
      <column name="precision"/>
      <column name="is_range"/>
      <sql>
         <![CDATA[
select * from (
with leaf as ( select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
from apidbtuning.metadataontology o, 
(select distinct term
 from apidbtuning.metadata
 where dataset_name = 'ISASimple_Gates_MAL-ED_stdm_tp_RSRC' --$$dataset$$ 
 and category = 'Event'
 and source_id != 'EUPATH_0000094') md
 where o.ontology_term_name = md.term),
first as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from leaf where parent_ontology_term_name is not null) par
 where o.ontology_term_name = par.parent_ontology_term_name),
 second as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from first where parent_ontology_term_name is not null) gpar
 where o.ontology_term_name = gpar.parent_ontology_term_name)
 select * from leaf
 union
 select * from first
 union
 select * from second
 union
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from second where parent_ontology_term_name is not null) ggpar
 where o.ontology_term_name = ggpar.parent_ontology_term_name
 ) order by ontology_term_name
         ]]>
    </sql>
   </sqlQuery>

       <sqlQuery name="VisitMetaData_maled" isCacheable="true">
         <paramRef ref="participantParams.visits_visitage_metadata_nf_maled" />
         <paramRef ref="participantParams.dwellings_nf_maled" />  
         <paramRef ref="participantParams.geographic_region_maled" />  
         <paramRef ref="participantParams.participants_nf_maled" />  
         <paramRef ref="participantParams.dataset" />  
         <column name="ontology_term_name"/>
         <column name="internal"/>
         <column name="number_value"/>
         <column name="date_value"/>
         <column name="string_value"/>
         <sql>
           <![CDATA[
select distinct valid.visit_id as internal, term as ontology_term_name, string_value, number_value, date_value
 from ApidbTuning.MetaDataWithoutNulls m, (
select distinct io.output_node_id as visit_id, io.input_node_id as part_id
from apidbtuning.protocolappnodeio io
where io.input_node_id in ($$dwellings_nf_maled$$)
and io.output_node_id in ($$visits_visitage_metadata_nf_maled$$)
) valid
 where m.dataset_name = $$dataset$$
 and m.category = 'Event'
 and m.protocol_app_node_id = valid.visit_id
          ]]>
    </sql>
    </sqlQuery>    

    <sqlQuery name="VisitSummaryMetaData_maled" isCacheable="true">
      <paramRef ref="participantParams.visits_visitage_metadata_nf_maled" />
      <paramRef ref="participantParams.dwellings_nf_maled" />  
      <paramRef ref="participantParams.geographic_region_maled" />  
      <paramRef ref="participantParams.participants_nf_maled" />  
      <paramRef ref="participantParams.dataset" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
select distinct valid.part_id as internal, term as ontology_term_name, string_value, number_value, date_value
 from ApidbTuning.MetaDataWithoutNulls m, (
select distinct io.output_node_id as visit_id, io.input_node_id as part_id
from apidbtuning.protocolappnodeio io
where io.input_node_id in ($$dwellings_nf_maled$$)
and io.output_node_id in ($$visits_visitage_metadata_nf_maled$$)
) valid
 where m.dataset_name = $$dataset$$
 and m.category = 'Event'
 and m.protocol_app_node_id = valid.visit_id
          ]]>
    </sql>
    </sqlQuery>

    <sqlQuery name="VisitMetaDataBkgd_maled">
      <paramRef ref="participantParams.visits_visitage_metadata_nf_maled" />
      <paramRef ref="participantParams.dwellings_nf_maled" />  
      <paramRef ref="participantParams.geographic_region_maled" />  
      <paramRef ref="participantParams.participants_nf_maled" />  
      <paramRef ref="participantParams.dataset" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
 select distinct protocol_app_node_id as internal, term as ontology_term_name, string_value, number_value, date_value
 from ApidbTuning.MetaDataWithoutNulls 
 where dataset_name = $$dataset$$
 and category = 'Event'
          ]]>
    </sql>
    </sqlQuery>

    <sqlQuery name="ClinicalVisitAgeOntologyNf_maled">
      <column name="ontology_term_name"/>
      <column name="parent_ontology_term_name"/>
      <column name="display_name"/>
      <column name="description"/>
      <column name="type"/>
      <column name="units"/>
      <column name="precision"/>
      <column name="is_range"/>
      <sql>
        <![CDATA[
                       select o.ontology_term_name, 'dummy' as parent_ontology_term_name, o.display_name, o.description, o.units,o.type,o.is_range,o.precision
from apidbtuning.metadataontology o
where ontology_term_source_id in ('EUPATH_0000113','EUPATH_0000644')
and dataset_name = 'ISASimple_Gates_MAL-ED_stdm_tp_RSRC' --$$dataset$$
union
                 select 'dummy' as ontology_term_name, null as parent_ontology_term_name, 'Dwelling' as display_name, null as description, null as units, 'string' as type, 0 as is_range,
                 null as precision from dual
    ]]>   
        </sql>
      </sqlQuery>
          
   <sqlQuery name="ClinicalVisitAgeMetaDataNf_maled" isCacheable="true">
      <paramRef ref="participantParams.geographic_region_maled" /> 
      <paramRef ref="participantParams.dataset" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
select distinct m.Protocol_App_Node_Id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
 from ApidbTuning.MetaDataWithoutNulls m, apidbtuning.protocolappnodeio io
  where io.input_node_id in ($$geographic_region_maled$$)
  and Io.Output_Type_Source_Id = 'EUPATH_0000738'
 and io.output_node_id = m.protocol_app_node_id
 and m.dataset_name = $$dataset$$
 and m.category = 'Event'
 and m.source_id = 'EUPATH_0000644'
         ]]>   
      </sql>
   </sqlQuery>

   <sqlQuery name="SummaryClinicalVisitAgeMetaDataNf_maled" isCacheable="true">
      <paramRef ref="participantParams.geographic_region_maled" /> 
      <paramRef ref="participantParams.dataset" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
select distinct io.input_Node_Id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
 from ApidbTuning.MetaDataWithoutNulls m, apidbtuning.protocolappnodeio io
  where io.input_node_id in ($$geographic_region_maled$$)
  and Io.Output_Type_Source_Id = 'EUPATH_0000738'
 and io.output_node_id = m.protocol_app_node_id
 and m.dataset_name = $$dataset$$
 and m.category = 'Event'
 and m.source_id = 'EUPATH_0000644'
         ]]>   
      </sql>
   </sqlQuery>

      <sqlQuery name="ClinicalVisitAgeMetaDataBkgdNf_maled" >
      <paramRef ref="participantParams.geographic_region_maled" /> 
      <paramRef ref="participantParams.dataset" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
select distinct protocol_app_node_id as internal, term as ontology_term_name, string_value, number_value, date_value
 from apidbtuning.metadata
 where dataset_name = $$dataset$$
 and category = 'Event'
 and source_id = 'EUPATH_0000644'
          ]]>   
      </sql>
   </sqlQuery>

   <sqlQuery name="RegionOntology_maled">
     <paramRef ref="participantParams.dataset" />  
     <column name="ontology_term_name"/>
     <column name="parent_ontology_term_name"/>
     <column name="display_name"/>
     <column name="description"/>
     <column name="type"/>
     <column name="units"/>
     <column name="precision"/>
     <column name="is_range"/>
    <sql>
         <![CDATA[
                  select o.ontology_term_name, 'dummy' as parent_ontology_term_name, o.display_name, o.description, o.units,o.type,o.is_range,o.precision
                  from apidbtuning.metadataontology o, (select distinct source_id
                  from apidbtuning.metadata
                  where dataset_name = 'ISASimple_Gates_MAL-ED_stdm_tp_RSRC' --$$dataset$$ 
                  and source_id in ('EUPATH_0000054','OBI_0001627','EUPATH_0000452')
                  and category = 'Household') ds
                  where ds.source_id = o.ontology_term_source_id
                  union
                  select 'dummy' as ontology_term_name, null as parent_ontology_term_name, 'Dwelling' as display_name, null as description, null as units, 'string' as type, 0 as is_range,
                  null as precision from dual
         ]]>
    </sql>
   </sqlQuery>

    <sqlQuery name="RegionMetaData_maled" >
      <paramRef ref="participantParams.dataset" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
select io.output_node_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
 from ApidbTuning.MetaDataWithoutNulls m, apidbtuning.protocolappnodeio io
 where m.dataset_name = $$dataset$$
 and m.category = 'Household'
 and m.source_id in ('EUPATH_0000054','OBI_0001627','EUPATH_0000452')
 and m.protocol_app_node_id = io.input_node_id
 and io.output_type_source_id = 'EUPATH_0000096'
        ]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="DwellingOntology_maled">
      <column name="ontology_term_name"/>
      <column name="parent_ontology_term_name"/>
      <column name="display_name"/>
      <column name="description"/>
      <column name="type"/>
      <column name="units"/>
      <column name="precision"/>
      <column name="is_range"/>
      <sql>
select * from (
   with leaf as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
from apidbtuning.metadataontology o, 
(select distinct term
 from apidbtuning.metadata
 where dataset_name = 'ISASimple_Gates_MAL-ED_stdm_tp_RSRC' --$$dataset$$ 
 and category = 'Household'
 and source_id != 'EUPATH_0000094') md
 where o.ontology_term_name = md.term),
first as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from leaf where parent_ontology_term_name is not null) par
 where o.ontology_term_name = par.parent_ontology_term_name),
 second as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from first where parent_ontology_term_name is not null) gpar
 where o.ontology_term_name = gpar.parent_ontology_term_name)
 select * from leaf
 union
 select * from first
 union
 select * from second
 union
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from second where parent_ontology_term_name is not null) ggpar
 where o.ontology_term_name = ggpar.parent_ontology_term_name
 ) order by ontology_term_name
    </sql>
    </sqlQuery>

    <sqlQuery name="DwellingMetaDataSummary_maled" isCacheable="true">
      <paramRef ref="participantParams.visits_visitage_metadata_nf_maled" />
      <paramRef ref="participantParams.geographic_region_maled" />  
      <paramRef ref="participantParams.participants_nf_maled" />  
      <paramRef ref="participantParams.dataset" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
         <![CDATA[
with part as ( select distinct io.input_node_id as dwelling_id, io.output_node_id as part_id
  from apidbtuning.participantattributes pa, apidbtuning.protocolappnodeio io
   where pa.protocol_app_node_id in ($$participants_nf_maled$$)
       and pa.protocol_app_node_id = io.output_node_id)
 select distinct Part.part_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
 from ApidbTuning.MetaDataWithoutNulls m, part
 where m.dataset_name = $$dataset$$
 and m.category = 'Household'
 and part.dwelling_id = m.protocol_app_node_id
          ]]>
    </sql>    

    </sqlQuery>

    <sqlQuery name="DwellingMetaData_maled" isCacheable="true">
      <paramRef ref="participantParams.visits_visitage_metadata_nf_maled" />
      <paramRef ref="participantParams.geographic_region_maled" />  
      <paramRef ref="participantParams.participants_nf_maled" />  
      <paramRef ref="participantParams.dataset" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
         <![CDATA[
with part as ( select distinct io.input_node_id as dwelling_id, io.output_node_id as part_id
  from apidbtuning.participantattributes pa, apidbtuning.protocolappnodeio io
   where pa.protocol_app_node_id in ($$participants_nf_maled$$)
       and pa.protocol_app_node_id = io.output_node_id)
 select distinct Part.dwelling_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
 from ApidbTuning.MetaDataWithoutNulls m, part
 where m.dataset_name = $$dataset$$
 and m.category = 'Household'
 and part.dwelling_id = m.protocol_app_node_id
          ]]>
    </sql>    

    </sqlQuery>

    <sqlQuery name="DwellingMetaDataBkgd_maled">
      <paramRef ref="participantParams.visits_visitage_metadata_nf_maled" />
      <paramRef ref="participantParams.geographic_region_maled" />  
      <paramRef ref="participantParams.participants_nf_maled" />  
      <paramRef ref="participantParams.dataset" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
         <![CDATA[
with part as ( select distinct io.input_node_id as dwelling_id, io.output_node_id as part_id
  from apidbtuning.participantattributes pa, apidbtuning.protocolappnodeio io
   where pa.protocol_app_node_id = io.output_node_id)
 select distinct Part.dwelling_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
 from ApidbTuning.MetaDataWithoutNulls m, part
 where m.dataset_name = $$dataset$$
 and m.category = 'Household'
 and part.dwelling_id = m.protocol_app_node_id
          ]]>
    </sql>    

    </sqlQuery>

  </querySet>    

      <groupSet name="metaDataGroups">
        
        <group name="daterange" displayName="Time period / age at visit" displayType="ShowHide">
            <description>
                <![CDATA[
Filter participants based on the date range they were observed, the number of days they were observed in that period, and their age at each observation (ie clinical visit). Study data is available from 05-AUG-2011 to 30-JUN-2016.
                ]]>
            </description>
        </group>
        <group name="household_daterange" displayName="Time period" displayType="ShowHide">
            <description>
                <![CDATA[
Filter households based on the date range they were in the study.  Note that the Average Anopheles is computed from monthly CDC light trap collections within this time frame.  
                ]]>
            </description>
        </group>
        <group name="age_at_visit" displayName="Age" displayType="ShowHide">
            <description>
                <![CDATA[
    Filter participants based on their age at visits. Participants are removed if they have any visits within the previously selected Time Period where they were not within this Age range.  (The study included participants from age 0.5 to 11 years, and from 18 to 75 years of age.)
                ]]>
            </description>
        </group>
        <group name="lighttrap_characteristics" displayName="Light Trap Collections" displayType="ShowHide">
            <description>
                <![CDATA[
		       Filter light trap collections based on their characteristics.
                ]]>
            </description>
        </group>
        <group name="part_characteristics" displayName="Personal characteristics" displayType="ShowHide">
            <description>
                <![CDATA[
		       Filter participants based on their characteristics that do not change over time.
                ]]>
            </description>
        </group>
        <group name="visit_part_characteristics" displayName="Personal characteristics" displayType="ShowHide">
            <description>
                <![CDATA[
You can restrict visits returned based on participants by selecting characteristics about where they live including their dwelling type and their own characteristics such as genotype information.
                ]]>
            </description>
        </group>
        <group name="part_dwelling_characteristics" displayName="Households" displayType="ShowHide">
            <description></description> <!-- no need for a descrip.  too obvious -->
        </group>
        <group name="geographic_loc" displayName="Geographic Region" displayType="ShowHide">
            <description></description> <!-- no need for a descrip.  too obvious -->
        </group>
        <group name="visit_visit_characteristics" displayName="Visits" displayType="ShowHide">
            <description>
                <![CDATA[
You can restrict the events returned in your search by selecting characteristics such as the type of event, diagnosis, event type, etc.
                ]]>
            </description>
        </group>
        <group name="visit_characteristics" displayName="Visits" displayType="ShowHide">
            <description>
                <![CDATA[
    Filter events based on observations at visits.  Visits shown are from the period when the selected participants meet the age range specified in the Age filter    
             ]]>
            </description>
        </group>
        <group name="event_characteristics" displayName="Events" displayType="ShowHide">
            <description>
                <![CDATA[
    Filter events based on observations at those events. 
             ]]>
            </description>
        </group>
       <group name="part_visit_characteristics" displayName="Visits" displayType="ShowHide">
            <description>
                <![CDATA[
    Filter participants based on observations at visits.  Visits shown are for the selected set of participants when they were within the age range specified in the Age filter.    
                ]]>
            </description>
        </group>
       <group name="part_event_characteristics" displayName="Events" displayType="ShowHide">
            <description>
                <![CDATA[
    Filter participants based on observations at events.     
                ]]>
            </description>
        </group>
        <group name="summary_params" displayName="Visit aggregates" displayType="ShowHide">
            <description>
                <![CDATA[
You can further restrict the participants returned in your search by setting summary values such as the average parasitemia or the number of visits / year of the visits matching the previous step characteristics.
                ]]>
            </description>
        </group>
        <group name="event_summary_params" displayName="# Events selected" displayType="ShowHide">
            <description>
                <![CDATA[
You can further restrict the participants returned in your search by setting a range of the number of events per participant that meet your search criteria. 
                ]]>
            </description>
        </group>
        <group name="relative_visits" displayName="Relative visits" displayType="ShowHide">
            <description>
                <![CDATA[
                         You can further restrict the visits you have selected above by removing (or keeping) those visits based on a relative visit you define below.  For example, you may want to only keep visits with a diagnosis of asymptomatic parasitemia from above if they are not followed within 14 days by a visit where the participant was diagnosed with malaria.  In this instance, set the number of days to 14, direction after and remove visits where diagnosis of malaria = yes.
                ]]>
            </description>
        </group>

        <group name="relative_events" displayName="Comparison events" displayType="ShowHide">
            <description>
                <![CDATA[
                         You can further restrict the events you have selected above by removing (or keeping) those events based on a relative event you define below.  For example, you may want to only keep diarrheal events if they are followed between 0 - 5 days by an event where a laboratory test was positive for shigella. 
                ]]>
            </description>
        </group>


    </groupSet>

</wdkModel>
