<wdkModel>

  <constant name="householdIdTransformSql1">
    <![CDATA[
      select internal from (##FILTERED_IDS##)
    ]]> 
  </constant>   

  <paramSet name="householdParams">
    
    <enumParam name="type"
               prompt="type"
               multiPick="false"
               quote="true"
               visible="false">
      <help>this is internal</help>
      <enumList>
        <enumValue default="true">
          <term>household</term>
          <internal>household</internal>
        </enumValue>
      </enumList>
    </enumParam>

       <dateRangeParam name="date_range"
                       prompt="Choose start and end dates "
                       minDate="2011-08-01"
                       maxDate="2016-06-30">
         <help>"select the earliest and latest dates to include for computing mosquito counts."</help>
<!--         <suggest default="{'min': '2011-08-05', 'max': '2016-06-30'}" />  -->

       </dateRangeParam>    

    <filterParamNew name="households_nf" 
                    ontologyQueryRef="HouseholdVQ.HouseholdOntology"
                    metadataQueryRef="HouseholdVQ.HouseholdMetaData"
                    backgroundQueryRef="HouseholdVQ.HouseholdMetaDataBkgd"
                    prompt="Households"
                    trimMetadataTerms="false"
                    dependedParamRef="participantParams.dataset,householdParams.geographic_region,householdParams.date_range">
      <help>
        Select participants based on their characteristics. 
      </help>
    </filterParamNew>

     <filterParamNew name="geographic_region" 
                    metadataQueryRef="HouseholdVQ.RegionMetaData"
                    ontologyQueryRef="HouseholdVQ.RegionOntology"
                    prompt="Household"
                    dependedParamRef="participantParams.dataset"
                    trimMetadataTerms="false">
      <help>
        Select dwellngs based on geographic region. 
      </help>
    </filterParamNew>          

    <filterParamNew name="participants_nf" 
                      metadataQueryRef="HouseholdVQ.ParticipantMetaData"
                      ontologyQueryRef="HouseholdVQ.ParticipantOntology"
                      backgroundQueryRef="HouseholdVQ.ParticipantMetaDataBkgd"
                      prompt="Participants"
                      trimMetadataTerms="false"
                      dependedParamRef="participantParams.dataset,householdParams.date_range,householdParams.households_nf,householdParams.geographic_region">
         <idTransformSql>%%householdIdTransformSql1%%</idTransformSql> 
         <help>
              Select participants based on their characteristics. 
         </help>
       </filterParamNew>


    <datasetParam includeProjects="ICEMR" name="householdsBySourceID"
		  recordClassRef="HouseholdRecordClasses.HouseholdRecordClass"
		  prompt="Source ID input set">
      <help><![CDATA[Input a set of source ID's, or upload a file <br><br>

               It can be delimited by a comma, semi colon or any white space<br><br>

               Its possible that not all ID's in the list will be found in the database
               due to a number of reasons such as unavailable ID maping. Its also currently not
               possible to inform which ID's did not match anything in the database]]></help>
      <suggest default="HH101009801" />
      
    </datasetParam>


    <answerParam name="household_result"
                  prompt="Input Result Set"
                  readonly="true"
                  visible="false">
       <recordClass ref="HouseholdRecordClasses.HouseholdRecordClass" />
    </answerParam>

 <enumParam name="district"
               prompt="Study site "
               multiPick="true"
               quote="true"
               visible="true">
      <help>Choose the study sites (districts) for your search.</help>
      <enumList>
        <enumValue default="true">
          <term>Tororo</term>
          <internal>tororo</internal>
        </enumValue>
        <enumValue default="true">
          <term>Kanungu</term>
          <internal>kanungu</internal>
        </enumValue>  
        <enumValue default="true">
          <term>Jinja</term>
          <internal>jinja</internal>
        </enumValue>  
      </enumList>
    </enumParam>

  </paramSet>

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!--  Vocab queries-->  
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

 <querySet name="HouseholdVQ" queryType="vocab" isCacheable="true">

   <sqlQuery name="HouseholdOntology">
     <column name="ontology_term_name"/>
     <column name="parent_ontology_term_name"/>
     <column name="display_name"/>
     <column name="description"/>
     <column name="type"/>
     <column name="units"/>
     <column name="precision"/>
     <column name="is_range"/>
    <sql>
         <![CDATA[
   with leaf as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
from apidbtuning.metadataontology o, 
(select distinct term
 from apidbtuning.metadata
 where dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC' --$$dataset$$
 and category = 'Household type') md
 where o.ontology_term_name = md.term),
first as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from leaf where parent_ontology_term_name is not null) par
 where o.ontology_term_name = par.parent_ontology_term_name),
 second as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from first where parent_ontology_term_name is not null) gpar
 where o.ontology_term_name = gpar.parent_ontology_term_name)
 select * from leaf
 union
 select * from first
 union
 select * from second
 union
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from second where parent_ontology_term_name is not null) ggpar
 where o.ontology_term_name = ggpar.parent_ontology_term_name
 union
 select 'average anopheles' as ontology_term_name, null as parent_ontology_term_name, 'Average Anopheles Collected' as display_name, 'Average number of Anopheles collected in monthly CDC light traps during the dates of this search' as description, null as units, 'number' as type, 1 as is_range,
 null as precision from dual
         ]]>
    </sql>
   </sqlQuery>
          
    <sqlQuery name="HouseholdMetaDataBkgd">
     <paramRef ref="householdParams.date_range" />  
     <paramRef ref="householdParams.geographic_region" />  
     <paramRef ref="participantParams.dataset" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
         <![CDATA[
select distinct m.protocol_app_node_id as internal, term as ontology_term_name, string_value, number_value, date_value
 from ApidbTuning.MetaDataWithoutNulls m
 where m.dataset_name = $$dataset$$
 and m.category = 'Household type'
 union
 select da.protocol_app_node_id, 'average anopheles' as ontology_term_name, null as string_value, 
   round(avg(nvl(EUPATH_0000192,0)+nvl(EUPATH_0000193,0)+nvl(EUPATH_0000204,0)+nvl(EUPATH_0000205,0)),1) as number_value, null as date_value
  from apidbtuning.householdattributes da, apidbtuning.protocolappnodeio io, apidbtuning.lighttrapattributes la
  where da.protocol_app_node_id = io.input_node_id
  and la.protocol_app_node_id = io.output_node_id
  group by da.protocol_app_node_id
          ]]>
    </sql>
    </sqlQuery>

    <sqlQuery name="HouseholdMetaData" isCacheable="true">
      <paramRef ref="householdParams.date_range" />  
      <paramRef ref="householdParams.geographic_region" />  
      <paramRef ref="participantParams.dataset" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
         <![CDATA[
select distinct m.protocol_app_node_id as internal, term as ontology_term_name, string_value, number_value, date_value
 from ApidbTuning.MetaDataWithoutNulls m
 where m.protocol_app_node_id in ($$geographic_region$$)
 union
 select da.protocol_app_node_id, 'average anopheles' as ontology_term_name, null as string_value, 
   round(avg(nvl(EUPATH_0000192,0)+nvl(EUPATH_0000193,0)+nvl(EUPATH_0000204,0)+nvl(EUPATH_0000205,0)),1) as number_value, null as date_value
  from apidbtuning.householdattributes da, apidbtuning.protocolappnodeio io, apidbtuning.lighttrapattributes la
  where da.protocol_app_node_id in ($$geographic_region$$)
  and da.protocol_app_node_id = io.input_node_id
  and la.protocol_app_node_id = io.output_node_id
  and la.OBI_0001619 >= $$date_range.min$$
  and la.OBI_0001619 <= $$date_range.max$$ 
  group by da.protocol_app_node_id
          ]]>
    </sql>
    </sqlQuery>

   <sqlQuery name="RegionOntology">
     <column name="ontology_term_name"/>
     <column name="parent_ontology_term_name"/>
     <column name="display_name"/>
     <column name="description"/>
     <column name="type"/>
     <column name="units"/>
     <column name="precision"/>
     <column name="is_range"/>
    <sql>
         <![CDATA[
                  select o.ontology_term_name, 'dummy' as parent_ontology_term_name, o.display_name, o.description, o.units,o.type,o.is_range,o.precision
                  from apidbtuning.metadataontology o, (select distinct source_id
                  from apidbtuning.metadata
                  where dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC' --$$dataset$$
                  and source_id in ('EUPATH_0000054','OBI_0001627','EUPATH_0000452')
                  and category = 'Household type') ds
                  where ds.source_id = o.ontology_term_source_id
                  union
                  select 'dummy' as ontology_term_name, null as parent_ontology_term_name, 'Household' as display_name, null as description, null as units, 'string' as type, 0 as is_range,
                  null as precision from dual
         ]]>
    </sql>
   </sqlQuery>
   
   <sqlQuery name="RegionMetaData">
     <paramRef ref="participantParams.dataset" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
         <![CDATA[
select distinct protocol_app_node_id as internal, term as ontology_term_name, string_value, number_value, date_value
 from apidbtuning.metadata
 where dataset_name = $$dataset$$
 and category in ('Household type','Household')
 and source_id in ('EUPATH_0000054','OBI_0001627','EUPATH_0000452')
          ]]>
    </sql>
    </sqlQuery>
    
   <sqlQuery name="ParticipantOntology">
     <column name="ontology_term_name"/>
     <column name="parent_ontology_term_name"/>
     <column name="display_name"/>
     <column name="description"/>
     <column name="type"/>
     <column name="units"/>
     <column name="precision"/>
     <column name="is_range"/>
    <sql>
         <![CDATA[
with leaf as ( 
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
from apidbtuning.metadataontology o, 
(select distinct term
 from apidbtuning.metadata
 where dataset_name = 'ISASimple_ICEMR_PRISM_surveillance_RSRC' --$$dataset$$
 and category = 'Participant') md
 where o.ontology_term_name = md.term),
first as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from leaf where parent_ontology_term_name is not null) par
 where o.ontology_term_name = par.parent_ontology_term_name),
 second as (
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from first where parent_ontology_term_name is not null) gpar
 where o.ontology_term_name = gpar.parent_ontology_term_name)
 select * from leaf
 union
 select * from first
 union
 select * from second
 union
 select o.ontology_term_name, CASE WHEN o.parent_ontology_term_name = 'Thing' THEN null ELSE o.parent_ontology_term_name END as parent_ontology_term_name, nvl(o.display_name,o.ontology_term_name) as display_name, o.description, o.units,o.type,o.is_range,o.precision
 from apidbtuning.metadataontology o, (select distinct parent_ontology_term_name from second where parent_ontology_term_name is not null) ggpar
 where o.ontology_term_name = ggpar.parent_ontology_term_name
         ]]>
    </sql>
   </sqlQuery>

   <sqlQuery name="ParticipantMetaData" isCacheable="true">
     <paramRef ref="householdParams.date_range" />  
     <paramRef ref="householdParams.households_nf" />  
     <paramRef ref="householdParams.geographic_region" />  
     <paramRef ref="participantParams.dataset" />  
     <column name="ontology_term_name"/>
     <column name="internal"/>
     <column name="number_value"/>
     <column name="date_value"/>
     <column name="string_value"/>
     <sql>
         <![CDATA[
select distinct m.protocol_app_node_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
from ApidbTuning.MetaDataWithoutNulls m, apidbtuning.protocolappnodeio io
 where m.dataset_name = $$dataset$$
 and m.category = 'Participant'
 and m.protocol_app_node_id = io.output_node_id
 and io.input_node_id in ($$households_nf$$)
          ]]>
    </sql>
    </sqlQuery>

    <sqlQuery name="ParticipantMetaDataBkgd">
     <paramRef ref="householdParams.date_range" />  
      <paramRef ref="householdParams.households_nf" />  
      <paramRef ref="householdParams.geographic_region" />  
      <paramRef ref="participantParams.dataset" />  
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
         <![CDATA[
select distinct m.protocol_app_node_id as internal, m.term as ontology_term_name, m.string_value, m.number_value, m.date_value
from ApidbTuning.MetaDataWithoutNulls m, apidbtuning.protocolappnodeio io
 where m.dataset_name = $$dataset$$
 and m.category = 'Participant'
 and m.protocol_app_node_id = io.output_node_id
 and io.input_node_id in (select protocol_app_node_id from apidbtuning.householdattributes)
          ]]>
    </sql>
    </sqlQuery>


 </querySet>

</wdkModel>
