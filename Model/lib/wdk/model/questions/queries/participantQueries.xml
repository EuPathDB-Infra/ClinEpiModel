 <wdkModel>

   <!-- notes

   -->

   <querySet name="ParticipantId" queryType="id" isCacheable="false" excludeProjects="TrichDB">

     <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
     <!-- Source id  -->
     <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="ParticipantsBySourceID"
          isCacheable="true">
      <!-- <paramRef ref="participantParams.participantsBySourceID"/> -->
       <paramRef ref="participantParams.participantsBySourceID"/>
       <column name="source_id"/>
       <column name="project_id"/>
      <sql>
           <![CDATA[
 Select distinct pa.name as source_id, '@PROJECT_ID@' as project_id from  APIDBTUNING.participantATTRIBUTES pa,
 ($$participantsBySourceID$$) ds where pa.name = ds.source_id
                ]]>   
        </sql>
     </sqlQuery>

     
     <sqlQuery name="ParticipantsByCharWiz"
          isCacheable="true">
       <paramRef ref="participantParams.geographic_region" groupRef="metaDataGroups.geographic_loc"/>
       <paramRef ref="participantParams.start_date" groupRef="metaDataGroups.daterange"/>
       <paramRef ref="participantParams.end_date" groupRef="metaDataGroups.daterange"/>
       <paramRef ref="participantParams.duration_observation" groupRef="metaDataGroups.daterange"/>  
       <paramRef ref="clinicalVisitParams.visits_visitage_metadata_nf" groupRef="metaDataGroups.age_at_visit"/>
       <paramRef ref="participantParams.dwellings_nf" groupRef="metaDataGroups.part_dwelling_characteristics"/>
       <paramRef ref="participantParams.participants_nf" groupRef="metaDataGroups.part_characteristics"/>
       <paramRef ref="clinicalVisitParams.visits_nf" groupRef="metaDataGroups.part_visit_characteristics"/>
       <!--paramRef ref="participantParams.min_anoph" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.max_anoph" groupRef="metaDataGroups.summary_params"/ -->
       <paramRef ref="participantParams.min_para_density" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.max_para_density" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.min_visits" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.max_visits" groupRef="metaDataGroups.summary_params"/>
       <column name="source_id"/>
       <column name="project_id"/>
       <column name="ave_anoph"/>
       <column name="avg_hemo"/>
       <column name="avg_weight"/>
       <column name="ave_para_density"/>
       <column name="ave_age_visit"/>
       <column name="visit_count"/>
       <column name="visits_per_year_obs"/>
       <column name="time_of_obs"/>
         <sql>
           <![CDATA[
select pa.name, pa.name as source_id, 'ClinEpiDB' as project_id, 
 round(count(*) / ((least(pa.EUPATH_0000152, to_date($$end_date$$,'DD-MON-YYYY'), pa.EUPATH_0000032 + ( age.max_age * 365)) - 
       greatest(to_date(pa.EUPATH_0000151,'YYYY-MM-DD'), to_date($$start_date$$,'DD-MON-YYYY'), pa.EUPATH_0000032 + ( age.min_age * 365)) + 1) / 365),1) as visits_per_year_obs,
                    round((least(pa.EUPATH_0000152, to_date($$end_date$$,'DD-MON-YYYY'), pa.EUPATH_0000032 + ( age.max_age * 365)) - 
       greatest(to_date(pa.EUPATH_0000151,'YYYY-MM-DD'), to_date($$start_date$$,'DD-MON-YYYY'), pa.EUPATH_0000032 + ( age.min_age * 365)) + 1) / 365,1) as time_of_obs, 
                    count(*) as visit_count, mos.ave_anoph, 
   round(exp(avg(case when ca.EUPATH_0000092 > 0.0 then ln(ca.EUPATH_0000092) else ln(0.00000000000001) end)),1) as ave_para_density,
   round(avg(ca.EUPATH_0000113),1) as ave_age_visit,
   round(avg(ca.EUPATH_0000047),1) as avg_hemo,
   round(avg(ca.IAO_0000414),1) as avg_weight
from apidbtuning.clinicalvisitattributes ca, apidbtuning.participantattributes pa, apidbtuning.protocolappnodeio io,
   (select min(EUPATH_0000113) as min_age, max(EUPATH_0000113) as max_age
   from apidbtuning.clinicalvisitattributes 
   where protocol_app_node_id in (SELECT distinct md.internal FROM ($$visits_visitage_metadata_nf$$) md)
   ) age,
   (select da.protocol_app_node_id, round(avg(nvl(EUPATH_0000192,0)+nvl(EUPATH_0000193,0)+nvl(EUPATH_0000204,0)+nvl(EUPATH_0000205,0)),1) as ave_anoph
  from apidbtuning.dwellingattributes da, apidbtuning.protocolappnodeio io, apidbtuning.lighttrapattributes la
  where da.protocol_app_node_id = io.input_node_id
  and la.protocol_app_node_id = io.output_node_id
  and la.OBI_0001619 >= to_date($$start_date$$,'DD-MON-YYYY') 
  and la.OBI_0001619 <= to_date($$end_date$$,'DD-MON-YYYY') 
  group by da.protocol_app_node_id) mos, apidbtuning.protocolappnodeio iom
where ca.protocol_app_node_id in ($$visits_nf$$)
and ca.protocol_app_node_id = io.output_node_id
and pa.protocol_app_node_id = io.input_node_id
and iom.output_node_id = pa.protocol_app_node_id
and iom.input_node_id = mos.protocol_app_node_id(+)
group by pa.name, pa.EUPATH_0000152, pa.EUPATH_0000032, pa.EUPATH_0000151,age.max_age,age.min_age,mos.ave_anoph 
having count(*) / ((least(pa.EUPATH_0000152, to_date($$end_date$$,'DD-MON-YYYY'), pa.EUPATH_0000032 + ( age.max_age * 365)) - 
       greatest(to_date(pa.EUPATH_0000151,'YYYY-MM-DD'), to_date($$start_date$$,'DD-MON-YYYY'), pa.EUPATH_0000032 + ( age.min_age * 365)) + 1) / 365) >= $$min_visits$$
 and count(*) / ((least(pa.EUPATH_0000152, to_date($$end_date$$,'DD-MON-YYYY'), pa.EUPATH_0000032 + ( age.max_age * 365)) - 
       greatest(to_date(pa.EUPATH_0000151,'YYYY-MM-DD'), to_date($$start_date$$,'DD-MON-YYYY'), pa.EUPATH_0000032 + ( age.min_age * 365)) + 1) / 365) <= $$max_visits$$
 and round(exp(avg(case when ca.EUPATH_0000092 > 0.0 then ln(ca.EUPATH_0000092) else ln(0.00000000000001) end)),1) >= $$min_para_density$$
 and round(exp(avg(case when ca.EUPATH_0000092 > 0.0 then ln(ca.EUPATH_0000092) else ln(0.00000000000001) end)),1) <= $$max_para_density$$
                ]]>   
        </sql>
     </sqlQuery>

     <sqlQuery name="ParticipantsByCharWizRelVis"
          isCacheable="true">
       <paramRef ref="participantParams.geographic_region" groupRef="metaDataGroups.geographic_loc"/>
       <paramRef ref="participantParams.start_date" groupRef="metaDataGroups.daterange"/>
       <paramRef ref="participantParams.end_date" groupRef="metaDataGroups.daterange"/>
       <paramRef ref="participantParams.duration_observation" groupRef="metaDataGroups.daterange"/>  
       <paramRef ref="clinicalVisitParams.visits_visitage_metadata_nf" groupRef="metaDataGroups.age_at_visit"/>
       <paramRef ref="participantParams.dwellings_nf" groupRef="metaDataGroups.part_dwelling_characteristics"/>
       <paramRef ref="participantParams.participants_nf" groupRef="metaDataGroups.part_characteristics"/>
       <paramRef ref="clinicalVisitParams.visits_nf" groupRef="metaDataGroups.part_visit_characteristics"/>
       <paramRef ref="clinicalVisitParams.use_relative_visits" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="clinicalVisitParams.maxDaysBetween" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="clinicalVisitParams.date_direction_fv" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="clinicalVisitParams.dateOperator_fv" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="clinicalVisitParams.relative_visits_nf" groupRef="metaDataGroups.relative_visits"/>
       <!--paramRef ref="participantParams.min_anoph" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.max_anoph" groupRef="metaDataGroups.summary_params"/ -->
       <paramRef ref="participantParams.min_para_density" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.max_para_density" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.min_visits" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.max_visits" groupRef="metaDataGroups.summary_params"/>
       <column name="source_id"/>
       <column name="project_id"/>
       <column name="ave_anoph"/>
       <column name="avg_hemo"/>
       <column name="avg_weight"/>
       <column name="ave_para_density"/>
       <column name="ave_age_visit"/>
       <column name="visit_count"/>
       <column name="visits_per_year_obs"/>
       <column name="time_of_obs"/>
         <sql>
           <![CDATA[
select pa.name, pa.name as source_id, 'ClinEpiDB' as project_id, 
 round(count(*) / ((least(pa.EUPATH_0000152, to_date($$end_date$$,'DD-MON-YYYY'), pa.EUPATH_0000032 + ( age.max_age * 365)) - 
       greatest(to_date(pa.EUPATH_0000151,'YYYY-MM-DD'), to_date($$start_date$$,'DD-MON-YYYY'), pa.EUPATH_0000032 + ( age.min_age * 365)) + 1) / 365),1) as visits_per_year_obs,
                    round((least(pa.EUPATH_0000152, to_date($$end_date$$,'DD-MON-YYYY'), pa.EUPATH_0000032 + ( age.max_age * 365)) - 
       greatest(to_date(pa.EUPATH_0000151,'YYYY-MM-DD'), to_date($$start_date$$,'DD-MON-YYYY'), pa.EUPATH_0000032 + ( age.min_age * 365)) + 1) / 365,1) as time_of_obs, 
                    count(*) as visit_count, mos.ave_anoph, 
   round(exp(avg(case when ca.EUPATH_0000092 > 0.0 then ln(ca.EUPATH_0000092) else ln(0.00000000000001) end)),1) as ave_para_density,
   round(avg(ca.EUPATH_0000113),1) as ave_age_visit,
   round(avg(ca.EUPATH_0000047),1) as avg_hemo,
   round(avg(ca.IAO_0000414),1) as avg_weight
from (select distinct io.input_node_id,io.output_node_id from apidbtuning.clinicalvisitattributes ca, apidbtuning.protocolappnodeio io
      where ca.protocol_app_node_id in ($$visits_nf$$)
      and ca.protocol_app_node_id = io.output_node_id
$$dateOperator_fv$$
 select distinct ioa.input_node_id,ioa.output_node_id
 from APIDBTUNING.CLINICALVISITATTRIBUTES seta, APIDBTUNING.CLINICALVISITATTRIBUTES setb, apidbtuning.protocolappnodeio ioa, apidbtuning.protocolappnodeio iob
 where seta.protocol_app_node_id in ($$visits_nf$$)
and $$use_relative_visits$$ = 1
and setb.protocol_app_node_id in ($$relative_visits_nf$$)
and seta.protocol_app_node_id = ioa.output_node_id
and setb.protocol_app_node_id = iob.output_node_id
and ioa.input_node_id = iob.input_node_id
and seta.protocol_app_node_id != setb.protocol_app_node_id
and setb.EUPATH_0000091 $$date_direction_fv$$ seta.EUPATH_0000091  
and abs(setb.EUPATH_0000091 - seta.EUPATH_0000091) <= $$maxDaysBetween$$
) main,
APIDBTUNING.CLINICALVISITATTRIBUTES ca, apidbtuning.participantattributes pa,
   (select min(EUPATH_0000113) as min_age, max(EUPATH_0000113) as max_age
   from apidbtuning.clinicalvisitattributes 
   where protocol_app_node_id in ($$visits_visitage_metadata_nf$$)
   ) age,
   (select da.protocol_app_node_id, round(avg(nvl(EUPATH_0000192,0)+nvl(EUPATH_0000193,0)+nvl(EUPATH_0000204,0)+nvl(EUPATH_0000205,0)),1) as ave_anoph
  from apidbtuning.dwellingattributes da, apidbtuning.protocolappnodeio io, apidbtuning.lighttrapattributes la
  where da.protocol_app_node_id = io.input_node_id
  and la.protocol_app_node_id = io.output_node_id
  and la.OBI_0001619 >= to_date($$start_date$$,'DD-MON-YYYY') 
  and la.OBI_0001619 <= to_date($$end_date$$,'DD-MON-YYYY') 
  group by da.protocol_app_node_id) mos, apidbtuning.protocolappnodeio iom
where ca.protocol_app_node_id = main.output_node_id
and pa.protocol_app_node_id = main.input_node_id
and iom.output_node_id = pa.protocol_app_node_id
and iom.input_node_id = mos.protocol_app_node_id(+)
group by pa.name, pa.EUPATH_0000152, pa.EUPATH_0000032, pa.EUPATH_0000151,age.max_age,age.min_age,mos.ave_anoph 
having count(*) / ((least(pa.EUPATH_0000152, to_date($$end_date$$,'DD-MON-YYYY'), pa.EUPATH_0000032 + ( age.max_age * 365)) - 
       greatest(to_date(pa.EUPATH_0000151,'YYYY-MM-DD'), to_date($$start_date$$,'DD-MON-YYYY'), pa.EUPATH_0000032 + ( age.min_age * 365)) + 1) / 365) >= $$min_visits$$
 and count(*) / ((least(pa.EUPATH_0000152, to_date($$end_date$$,'DD-MON-YYYY'), pa.EUPATH_0000032 + ( age.max_age * 365)) - 
       greatest(to_date(pa.EUPATH_0000151,'YYYY-MM-DD'), to_date($$start_date$$,'DD-MON-YYYY'), pa.EUPATH_0000032 + ( age.min_age * 365)) + 1) / 365) <= $$max_visits$$
 and round(exp(avg(case when ca.EUPATH_0000092 > 0.0 then ln(ca.EUPATH_0000092) else ln(0.00000000000001) end)),1) >= $$min_para_density$$
 and round(exp(avg(case when ca.EUPATH_0000092 > 0.0 then ln(ca.EUPATH_0000092) else ln(0.00000000000001) end)),1) <= $$max_para_density$$
                ]]>   
        </sql>
     </sqlQuery>

     <sqlQuery name="ParticipantsByMetadataCross"
          isCacheable="true">
       <paramRef ref="clinicalVisitParams.minAgeAtVisit" groupRef="metaDataGroups.age_at_visit"/>
       <paramRef ref="clinicalVisitParams.maxAgeAtVisit" groupRef="metaDataGroups.age_at_visit"/>
       <paramRef ref="participantParams.start_date" groupRef="metaDataGroups.daterange"/>
       <paramRef ref="participantParams.end_date" groupRef="metaDataGroups.daterange"/>
       <paramRef ref="participantParams.duration_observation" groupRef="metaDataGroups.daterange"/>  
       <paramRef ref="participantParams.participants_by_all_metadata" groupRef="metaDataGroups.part_characteristics"/>
       <paramRef ref="clinicalVisitParams.visits_by_metadata" groupRef="metaDataGroups.visit_characteristics"/>
       <paramRef ref="participantParams.min_anoph" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.max_anoph" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.min_para_density" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.max_para_density" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.min_visits" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.max_visits" groupRef="metaDataGroups.summary_params"/>
       <column name="source_id"/>
       <column name="project_id"/>
       <column name="ave_anoph"/>
       <column name="avg_hemo"/>
       <column name="avg_weight"/>
       <column name="ave_para_density"/>
       <column name="ave_age_visit"/>
       <column name="visit_count"/>
       <column name="visits_per_year_obs"/>
       <column name="time_of_obs"/>
         <sql>
           <![CDATA[
                    select '@PROJECT_ID@' as project_id, round(count(*) / (to_number(least(to_date(max(pa.last_date_observed),'YYYYMMDD'), to_date($$end_date$$, 'DD-MON-YYYY'), to_date(max(pa.date_of_birth),'YYYYMMDD') + ( ma.max_age * 365)) - greatest(max(pa.app_date), to_date($$start_date$$,'DD-MON-YYYY'), to_date(max(pa.date_of_birth),'YYYYMMDD') + ( $$minAgeAtVisit$$ * 365)) + 1) / 365),1) as visits_per_year_obs,
                    round(to_number(least(to_date(max(pa.last_date_observed),'YYYYMMDD'), to_date($$end_date$$, 'DD-MON-YYYY'), to_date(max(pa.date_of_birth),'YYYYMMDD') + ( ma.max_age * 365)) - greatest(max(pa.app_date), to_date($$start_date$$, 'DD-MON-YYYY'), to_date(max(pa.date_of_birth),'YYYYMMDD') + ( $$minAgeAtVisit$$ * 365)) + 1) / 365,1) as time_of_obs,
                    count(*) as visit_count, pa.source_id, lt.ave_anoph, 
   round(exp(avg(case when ASEXUAL_PARASITE_DENSITY > 0.0 then ln(ASEXUAL_PARASITE_DENSITY) else ln(0.00000000000001) end)),1) as ave_para_density,
   round(avg(age_since_birth_at_time_of_vi),1) as ave_age_visit,
   round(avg(hemoglobin),1) as avg_hemo,
   round(avg(weight),1) as avg_weight
 from APIDBTUNING.PERSONATTRIBUTES pa, apidbtuning.clinicalvisitattributes ca,
      (select da.source_id as dwelling_id, round(avg(SUM_FEMALE_AS_IN_A_COLLECTION),1) as ave_anoph 
        from apidbtuning.lighttrapattributes lta, apidbtuning.dwellingattributes da
        where da.source_id in (select parent_id from ApidbTuning.PersonAttributes where source_id in ($$participants_by_all_metadata$$) ) 
        and da.source_id = lta.parent_id(+)
        and lta.collection_date(+) >= to_date($$start_date$$, 'DD-MON-YYYY')
        and lta.collection_date(+) <= to_date($$end_date$$, 'DD-MON-YYYY')
        group by da.source_id
        having nvl(round(avg(lta.SUM_FEMALE_AS_IN_A_COLLECTION(+)),1),0) >= $$min_anoph$$ 
        and nvl(round(avg(lta.SUM_FEMALE_AS_IN_A_COLLECTION(+)),1),0) <= $$max_anoph$$ ) lt,
        (select CASE WHEN round($$maxAgeAtVisit$$) = $$maxAgeAtVisit$$ 
            THEN $$maxAgeAtVisit$$ + 0.99
            ELSE $$maxAgeAtVisit$$
            END as max_age
            from dual                    
           ) ma
 where pa.source_id in ($$participants_by_all_metadata$$)
 and ca.source_id in ($$visits_by_metadata$$) 
 and ca.parent_id = pa.source_id
 and lt.dwelling_id = pa.parent_id
 group by pa.source_id, lt.ave_anoph,max_age
 having count(*) / (to_number(least(to_date(max(pa.last_date_observed),'YYYYMMDD'), to_date($$end_date$$, 'DD-MON-YYYY'), to_date(max(pa.date_of_birth),'YYYYMMDD') + ( ma.max_age * 365)) - greatest(max(pa.app_date), to_date($$start_date$$, 'DD-MON-YYYY'), to_date(max(pa.date_of_birth),'YYYYMMDD') + ( $$minAgeAtVisit$$ * 365)) + 1) / 365) >= $$min_visits$$
 and count(*) / (to_number(least(to_date(max(pa.last_date_observed),'YYYYMMDD'), to_date($$end_date$$, 'DD-MON-YYYY'), to_date(max(pa.date_of_birth),'YYYYMMDD') + ( ma.max_age * 365)) - greatest(max(pa.app_date), to_date($$start_date$$, 'DD-MON-YYYY'), to_date(max(pa.date_of_birth),'YYYYMMDD') + ( $$minAgeAtVisit$$ * 365)) + 1) / 365) <= $$max_visits$$
 and round(exp(avg(case when ASEXUAL_PARASITE_DENSITY > 0.0 then ln(ASEXUAL_PARASITE_DENSITY) else ln(0.00000000000001) end)),1) >= $$min_para_density$$
 and round(exp(avg(case when ASEXUAL_PARASITE_DENSITY > 0.0 then ln(ASEXUAL_PARASITE_DENSITY) else ln(0.00000000000001) end)),1) <= $$max_para_density$$
                ]]>   
        </sql>
     </sqlQuery>

     <sqlQuery name="ParticipantsByAllCharacteristics"
          isCacheable="true">
       <paramRef ref="clinicalVisitParams.minAgeAtVisit" />
       <paramRef ref="clinicalVisitParams.maxAgeAtVisit" />
       <paramRef ref="participantParams.start_date" />
       <paramRef ref="participantParams.end_date" />
       <paramRef ref="participantParams.duration_observation" />  
       <paramRef ref="participantParams.participants_by_all_metadata" />
       <paramRef ref="clinicalVisitParams.visits_by_metadata" />
       <paramRef ref="participantParams.min_anoph" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.max_anoph" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.min_para_density" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.max_para_density" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.min_visits" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.max_visits" groupRef="metaDataGroups.summary_params"/>
       <column name="source_id"/>
       <column name="project_id"/>
       <column name="ave_anoph"/>
       <column name="avg_hemo"/>
       <column name="avg_weight"/>
       <column name="ave_para_density"/>
       <column name="ave_age_visit"/>
       <column name="visit_count"/>
       <column name="visits_per_year_obs"/>
       <column name="time_of_obs"/>
         <sql>
           <![CDATA[
                    select '@PROJECT_ID@' as project_id, round(count(*) / (to_number(least(to_date(max(pa.last_date_observed),'YYYYMMDD'), to_date($$end_date$$, 'DD-MON-YYYY'), to_date(max(pa.date_of_birth),'YYYYMMDD') + ( ma.max_age * 365)) - greatest(max(pa.app_date), to_date($$start_date$$,'DD-MON-YYYY'), to_date(max(pa.date_of_birth),'YYYYMMDD') + ( $$minAgeAtVisit$$ * 365)) + 1) / 365),1) as visits_per_year_obs,
                    round(to_number(least(to_date(max(pa.last_date_observed),'YYYYMMDD'), to_date($$end_date$$, 'DD-MON-YYYY'), to_date(max(pa.date_of_birth),'YYYYMMDD') + ( ma.max_age * 365)) - greatest(max(pa.app_date), to_date($$start_date$$, 'DD-MON-YYYY'), to_date(max(pa.date_of_birth),'YYYYMMDD') + ( $$minAgeAtVisit$$ * 365)) + 1) / 365,1) as time_of_obs,
                    count(*) as visit_count, pa.source_id, lt.ave_anoph, 
   round(exp(avg(case when ASEXUAL_PARASITE_DENSITY > 0.0 then ln(ASEXUAL_PARASITE_DENSITY) else ln(0.00000000000001) end)),1) as ave_para_density,
   round(avg(age_since_birth_at_time_of_vi),1) as ave_age_visit,
   round(avg(hemoglobin),1) as avg_hemo,
   round(avg(weight),1) as avg_weight
 from APIDBTUNING.PERSONATTRIBUTES pa, apidbtuning.clinicalvisitattributes ca,
      (select da.source_id as dwelling_id, round(avg(SUM_FEMALE_AS_IN_A_COLLECTION),1) as ave_anoph 
        from apidbtuning.lighttrapattributes lta, apidbtuning.dwellingattributes da
        where da.source_id in (select parent_id from ApidbTuning.PersonAttributes where source_id in ($$participants_by_all_metadata$$) ) 
        and da.source_id = lta.parent_id(+)
        and lta.collection_date(+) >= to_date($$start_date$$, 'DD-MON-YYYY')
        and lta.collection_date(+) <= to_date($$end_date$$, 'DD-MON-YYYY')
        group by da.source_id
        having nvl(round(avg(lta.SUM_FEMALE_AS_IN_A_COLLECTION(+)),1),0) >= $$min_anoph$$ 
        and nvl(round(avg(lta.SUM_FEMALE_AS_IN_A_COLLECTION(+)),1),0) <= $$max_anoph$$ ) lt,
        (select CASE WHEN round($$maxAgeAtVisit$$) = $$maxAgeAtVisit$$ 
            THEN $$maxAgeAtVisit$$ + 0.99
            ELSE $$maxAgeAtVisit$$
            END as max_age
            from dual                    
           ) ma
 where pa.source_id in ($$participants_by_all_metadata$$)
 and ca.source_id in ($$visits_by_metadata$$) 
 and ca.parent_id = pa.source_id
 and lt.dwelling_id = pa.parent_id
 group by pa.source_id, lt.ave_anoph,max_age
 having count(*) / (to_number(least(to_date(max(pa.last_date_observed),'YYYYMMDD'), to_date($$end_date$$, 'DD-MON-YYYY'), to_date(max(pa.date_of_birth),'YYYYMMDD') + ( ma.max_age * 365)) - greatest(max(pa.app_date), to_date($$start_date$$, 'DD-MON-YYYY'), to_date(max(pa.date_of_birth),'YYYYMMDD') + ( $$minAgeAtVisit$$ * 365)) + 1) / 365) >= $$min_visits$$
 and count(*) / (to_number(least(to_date(max(pa.last_date_observed),'YYYYMMDD'), to_date($$end_date$$, 'DD-MON-YYYY'), to_date(max(pa.date_of_birth),'YYYYMMDD') + ( ma.max_age * 365)) - greatest(max(pa.app_date), to_date($$start_date$$, 'DD-MON-YYYY'), to_date(max(pa.date_of_birth),'YYYYMMDD') + ( $$minAgeAtVisit$$ * 365)) + 1) / 365) <= $$max_visits$$
 and round(exp(avg(case when ASEXUAL_PARASITE_DENSITY > 0.0 then ln(ASEXUAL_PARASITE_DENSITY) else ln(0.00000000000001) end)),1) >= $$min_para_density$$
 and round(exp(avg(case when ASEXUAL_PARASITE_DENSITY > 0.0 then ln(ASEXUAL_PARASITE_DENSITY) else ln(0.00000000000001) end)),1) <= $$max_para_density$$
                ]]>   
        </sql>
     </sqlQuery>

        <sqlQuery name="ParticipantsByRelativeVisits"
          isCacheable="true">
       <paramRef ref="clinicalVisitParams.minAgeAtVisit" groupRef="metaDataGroups.age_at_visit"/>
       <paramRef ref="clinicalVisitParams.maxAgeAtVisit" groupRef="metaDataGroups.age_at_visit"/>
       <paramRef ref="participantParams.start_date" groupRef="metaDataGroups.daterange"/>
       <paramRef ref="participantParams.end_date" groupRef="metaDataGroups.daterange"/>
       <paramRef ref="participantParams.duration_observation" groupRef="metaDataGroups.daterange"/>  
       <paramRef ref="participantParams.participants_by_all_metadata" groupRef="metaDataGroups.part_characteristics"/>
       <paramRef ref="clinicalVisitParams.visits_by_metadata" groupRef="metaDataGroups.visit_characteristics"/>
       <paramRef ref="clinicalVisitParams.maxDaysBetween" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="clinicalVisitParams.date_direction" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="clinicalVisitParams.dateOperator" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="clinicalVisitParams.visits_by_metadata_2" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="participantParams.min_visits"/>
       <paramRef ref="participantParams.max_visits"/>
       <column name="source_id"/>
       <column name="project_id"/>
       <column name="visits_per_year_obs"/>
       <column name="ave_parasite_density"/>
       <column name="time_of_obs"/>
       <column name="visit_count"/>
      <!-- <column name="avg_hemo"/>
       <column name="avg_weight"/>
    -->     <sql>
           <![CDATA[
 select '@PROJECT_ID@' as project_id,main.source_id,main.ave_parasite_density, main.num_visits as visit_count,
 round(main.num_visits / (to_number(least(to_date(pa.last_date_observed,'YYYYMMDD'), to_date($$end_date$$,'DD-MON-YYYY'), to_date(pa.date_of_birth,'YYYYMMDD') + ( ma.max_age * 365)) - greatest(pa.app_date, to_date($$start_date$$, 'DD-MON-YYYY'), to_date(pa.date_of_birth,'YYYYMMDD') + ( $$minAgeAtVisit$$ * 365)) + 1) / 365),1) as visits_per_year_obs,
 round(to_number(least(to_date(pa.last_date_observed,'YYYYMMDD'), to_date($$end_date$$,'DD-MON-YYYY'), to_date(pa.date_of_birth,'YYYYMMDD') + ( ma.max_age * 365)) - greatest(pa.app_date, to_date($$start_date$$, 'DD-MON-YYYY'), to_date(pa.date_of_birth,'YYYYMMDD') + ( $$minAgeAtVisit$$ * 365)) + 1) / 365,1) as time_of_obs
 from (
 select parent_id as source_id, round(avg(ASEXUAL_PARASITE_DENSITY),1) as ave_parasite_density,count(*) as num_visits
 from (select distinct source_id, parent_id, ASEXUAL_PARASITE_DENSITY from (
 select source_id, parent_id, ASEXUAL_PARASITE_DENSITY
 from APIDBTUNING.CLINICALVISITATTRIBUTES
 where source_id in ($$visits_by_metadata$$)
 $$dateOperator$$
 select seta.source_id,seta.parent_id, seta.ASEXUAL_PARASITE_DENSITY
 from APIDBTUNING.CLINICALVISITATTRIBUTES seta, APIDBTUNING.CLINICALVISITATTRIBUTES setb
 where seta.source_id in ($$visits_by_metadata$$)
and setb.source_id in ($$visits_by_metadata_2$$)
and seta.parent_id = setb.parent_id
and seta.source_id != setb.source_id
and setb.visit_date $$date_direction$$ seta.visit_date
and abs(setb.visit_date - seta.visit_date) <= $$maxDaysBetween$$))
group by parent_id
) main, Apidbtuning.PersonAttributes pa, ApidbTuning.DwellingAttributes da,
        (select CASE WHEN round($$maxAgeAtVisit$$) = $$maxAgeAtVisit$$ 
            THEN $$maxAgeAtVisit$$ + 0.99
            ELSE $$maxAgeAtVisit$$
            END as max_age
            from dual                    
           ) ma
where main.source_id = pa.source_id
and   pa.parent_id = da.source_id
and   pa.source_id in ($$participants_by_all_metadata$$)
and main.num_visits / (to_number(least(to_date(pa.last_date_observed,'YYYYMMDD'), to_date($$end_date$$,'DD-MON-YYYY'), to_date(pa.date_of_birth,'YYYYMMDD') + ( ma.max_age * 365)) - greatest(pa.app_date, to_date($$start_date$$, 'DD-MON-YYYY'), to_date(pa.date_of_birth,'YYYYMMDD') + ( $$minAgeAtVisit$$ * 365)) + 1) / 365) >= $$min_visits$$
and main.num_visits / (to_number(least(to_date(pa.last_date_observed,'YYYYMMDD'), to_date($$end_date$$,'DD-MON-YYYY'), to_date(pa.date_of_birth,'YYYYMMDD') + ( ma.max_age * 365)) - greatest(pa.app_date, to_date($$start_date$$, 'DD-MON-YYYY'), to_date(pa.date_of_birth,'YYYYMMDD') + ( $$minAgeAtVisit$$ * 365)) + 1) / 365) <= $$max_visits$$
               ]]>   
       </sql>
    </sqlQuery>    


<!-- transform(s) -->

    <sqlQuery name="ParticipantsByDwellingIds" doNotTest="true"
              displayName="ID" isCacheable="true">
      <paramRef ref="dwellingParams.dwelling_result"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="dwelling"/>
        <column name="wdk_weight"/>

        <sql>
            <![CDATA[
SELECT DISTINCT pana.associated_node_source_id as source_id , '@PROJECT_ID@' as project_id,
       pana.node_source_id as dwelling, wdk_weight
FROM ($$dwelling_result$$) source_set, ApidbTuning.PANAssociations pana
WHERE source_set.source_id = pana.node_source_id
  AND node_type='dwelling'
  and associated_node_type = 'person'
             ]]>
        </sql>
    </sqlQuery>
    
      <sqlQuery name="ParticipantsByClinicalVisits" doNotTest="true"
              displayName="ID" isCacheable="true">
      <paramRef ref="clinicalVisitParams.clinical_visit_result"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="num_of_visits"/>
        <column name="wdk_weight"/>

        <sql>
            <![CDATA[
              SELECT   pana.node_source_id as source_id , '@PROJECT_ID@' as project_id, count(*) as num_of_visits , max(source_set.wdk_weight) as wdk_weight
              FROM ($$clinical_visit_result$$) source_set, ApidbTuning.PANAssociations pana
              WHERE source_set.source_id = pana.associated_node_source_id AND associated_node_type='clinical_visit_data' AND  node_type = 'person'
              GROUP BY pana.node_source_id
             ]]>
        </sql>
    </sqlQuery>
                   

  </querySet>
</wdkModel>
