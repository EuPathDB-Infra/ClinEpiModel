 <wdkModel>

   <!-- notes

   -->

   <querySet name="ParticipantId" queryType="id" isCacheable="false" excludeProjects="TrichDB">

     <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
     <!-- Source id  -->
     <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="ParticipantsBySourceID"
          isCacheable="true">
      <!-- <paramRef ref="participantParams.participantsBySourceID"/> -->
       <paramRef ref="participantParams.participantsBySourceID"/>
       <column name="source_id"/>
       <column name="project_id"/>
      <sql>
           <![CDATA[
 Select distinct pa.name as source_id, '@PROJECT_ID@' as project_id from  APIDBTUNING.participantATTRIBUTES pa,
 ($$participantsBySourceID$$) ds where pa.name = ds.source_id
                ]]>   
        </sql>
     </sqlQuery>

     
     <sqlQuery name="ParticipantsByCharWiz"
          isCacheable="true">
       <paramRef ref="participantParams.dataset" visible="false" default="ISASimple_ICEMR_PRISM_surveillance_RSRC" groupRef="metaDataGroups.geographic_loc"/>
       <paramRef ref="participantParams.geographic_region" groupRef="metaDataGroups.geographic_loc"/>
       <paramRef ref="clinicalVisitParams.visit_date" groupRef="metaDataGroups.daterange"/>
       <paramRef ref="participantParams.duration_observation" groupRef="metaDataGroups.daterange"/>  
       <paramRef ref="participantParams.visits_visitage_metadata_nf" groupRef="metaDataGroups.daterange"/>
       <paramRef ref="participantParams.participants_nf" groupRef="metaDataGroups.part_characteristics"/>
       <paramRef ref="participantParams.households_nf" groupRef="metaDataGroups.part_household_characteristics"/>
       <paramRef ref="participantParams.visits_nf" groupRef="metaDataGroups.part_visit_characteristics"/>
       <paramRef ref="participantParams.parasite_density" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.visits_per_year" groupRef="metaDataGroups.summary_params"/>
       <column name="source_id"/>
       <column name="project_id"/>
       <column name="ave_anoph"/>
       <column name="avg_hemo"/>
       <column name="avg_weight"/>
       <column name="ave_para_density"/>
       <column name="ave_age_visit"/>
       <column name="visit_count"/>
       <column name="visits_per_year_obs"/>
       <column name="time_of_obs"/>
         <sql>
           <![CDATA[
select pa.name, pa.name as source_id, 'ClinEpiDB' as project_id, 
 round(count(*) / ((least(pa.EUPATH_0000152, $$visit_date.max$$, pa.EUPATH_0000032 + ( age.max_age * 365)) - 
       greatest(pa.EUPATH_0000151, $$visit_date.min$$, pa.EUPATH_0000032 + ( age.min_age * 365)) + 1) / 365),1) as visits_per_year_obs,
                    round((least(pa.EUPATH_0000152, $$visit_date.max$$, pa.EUPATH_0000032 + ( age.max_age * 365)) - 
       greatest(pa.EUPATH_0000151, $$visit_date.min$$, pa.EUPATH_0000032 + ( age.min_age * 365)) + 1) / 365,1) as time_of_obs, 
                    count(*) as visit_count, mos.ave_anoph, 
   round(exp(avg(case when ca.EUPATH_0000092 > 0.0 then ln(ca.EUPATH_0000092) else ln(0.00000000000001) end)),1) as ave_para_density,
   round(avg(ca.EUPATH_0000113),1) as ave_age_visit,
   round(avg(ca.EUPATH_0000047),1) as avg_hemo,
   round(avg(ca.IAO_0000414),1) as avg_weight
from apidbtuning.clinicalvisitattributes ca, apidbtuning.participantattributes pa, apidbtuning.protocolappnodeio io,
   (select min(EUPATH_0000113) as min_age, max(EUPATH_0000113) as max_age
   from apidbtuning.clinicalvisitattributes 
   where protocol_app_node_id in (SELECT distinct md.internal FROM ($$visits_visitage_metadata_nf$$) md)
   ) age,
   (select da.protocol_app_node_id, round(avg(nvl(EUPATH_0000192,0)+nvl(EUPATH_0000193,0)+nvl(EUPATH_0000204,0)+nvl(EUPATH_0000205,0)),1) as ave_anoph
  from apidbtuning.householdattributes da, apidbtuning.protocolappnodeio io, apidbtuning.lighttrapattributes la
  where da.protocol_app_node_id = io.input_node_id
  and la.protocol_app_node_id = io.output_node_id
  and la.OBI_0001619 >= $$visit_date.min$$ 
  and la.OBI_0001619 <= $$visit_date.max$$ 
  group by da.protocol_app_node_id) mos, apidbtuning.protocolappnodeio iom
where ca.protocol_app_node_id in ($$visits_nf$$)
and ca.protocol_app_node_id = io.output_node_id
and pa.protocol_app_node_id = io.input_node_id
and iom.output_node_id = pa.protocol_app_node_id
and iom.input_node_id = mos.protocol_app_node_id(+)
group by pa.name, pa.EUPATH_0000152, pa.EUPATH_0000032, pa.EUPATH_0000151,age.max_age,age.min_age,mos.ave_anoph 
having count(*) / ((least(pa.EUPATH_0000152, $$visit_date.max$$, pa.EUPATH_0000032 + ( age.max_age * 365)) - 
       greatest(pa.EUPATH_0000151, $$visit_date.min$$, pa.EUPATH_0000032 + ( age.min_age * 365)) + 1) / 365) >= $$visits_per_year.min$$
 and count(*) / ((least(pa.EUPATH_0000152, $$visit_date.max$$, pa.EUPATH_0000032 + ( age.max_age * 365)) - 
       greatest(pa.EUPATH_0000151, $$visit_date.min$$, pa.EUPATH_0000032 + ( age.min_age * 365)) + 1) / 365) <= $$visits_per_year.max$$
 and round(exp(avg(case when ca.EUPATH_0000092 > 0.0 then ln(ca.EUPATH_0000092) else ln(0.00000000000001) end)),1) >= $$parasite_density.min$$
 and round(exp(avg(case when ca.EUPATH_0000092 > 0.0 then ln(ca.EUPATH_0000092) else ln(0.00000000000001) end)),1) <= $$parasite_density.max$$
                ]]>   
        </sql>
     </sqlQuery>

     <sqlQuery name="ParticipantsByCharWizRelVis"
          isCacheable="true">
       <paramRef ref="participantParams.geographic_region" groupRef="metaDataGroups.geographic_loc"/>
       <paramRef ref="participantParams.dataset" visible="false" default="ISASimple_ICEMR_PRISM_surveillance_RSRC" groupRef="metaDataGroups.geographic_loc"/>
       <paramRef ref="clinicalVisitParams.visit_date" groupRef="metaDataGroups.daterange"/>
       <paramRef ref="participantParams.duration_observation" groupRef="metaDataGroups.daterange"/>  
       <paramRef ref="participantParams.visits_visitage_metadata_nf" groupRef="metaDataGroups.daterange"/>
       <paramRef ref="participantParams.participants_nf" groupRef="metaDataGroups.part_characteristics"/>
       <paramRef ref="participantParams.households_nf" groupRef="metaDataGroups.part_household_characteristics"/>
       <paramRef ref="participantParams.visits_nf" groupRef="metaDataGroups.part_visit_characteristics"/>
       <paramRef ref="clinicalVisitParams.use_relative_visits" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="clinicalVisitParams.days_between" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="clinicalVisitParams.date_direction_fv" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="clinicalVisitParams.dateOperator_fv" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="clinicalVisitParams.relative_visits_nf" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="participantParams.parasite_density" groupRef="metaDataGroups.summary_params"/>
       <paramRef ref="participantParams.visits_per_year" groupRef="metaDataGroups.summary_params"/>
       <column name="source_id"/>
       <column name="project_id"/>
       <column name="ave_anoph"/>
       <column name="avg_hemo"/>
       <column name="avg_weight"/>
       <column name="ave_para_density"/>
       <column name="ave_age_visit"/>
       <column name="visit_count"/>
       <column name="visits_per_year_obs"/>
       <column name="time_of_obs"/>
         <sql>
           <![CDATA[
select pa.name, pa.name as source_id, 'ClinEpiDB' as project_id, 
round(count(*) / ((least(pa.EUPATH_0000152, $$visit_date.max$$, pa.EUPATH_0000032 + ( age.max_age * 365)) -
greatest(pa.EUPATH_0000151, $$visit_date.min$$, pa.EUPATH_0000032 + ( age.min_age * 365)) + 1) / 365),1) as visits_per_year_obs,
                    round((least(pa.EUPATH_0000152, $$visit_date.max$$, pa.EUPATH_0000032 + ( age.max_age * 365)) - 
       greatest(pa.EUPATH_0000151, $$visit_date.min$$, pa.EUPATH_0000032 + ( age.min_age * 365)) + 1) / 365,1) as time_of_obs, 
                    count(*) as visit_count, mos.ave_anoph, 
   round(exp(avg(case when ca.EUPATH_0000092 > 0.0 then ln(ca.EUPATH_0000092) else ln(0.00000000000001) end)),1) as ave_para_density,
   round(avg(ca.EUPATH_0000113),1) as ave_age_visit,
   round(avg(ca.EUPATH_0000047),1) as avg_hemo,
   round(avg(ca.IAO_0000414),1) as avg_weight
from (select distinct io.input_node_id,io.output_node_id from apidbtuning.clinicalvisitattributes ca, apidbtuning.protocolappnodeio io
      where ca.protocol_app_node_id in ($$visits_nf$$)
      and ca.protocol_app_node_id = io.output_node_id
$$dateOperator_fv$$
 select distinct ioa.input_node_id,ioa.output_node_id
 from APIDBTUNING.CLINICALVISITATTRIBUTES seta, APIDBTUNING.CLINICALVISITATTRIBUTES setb, apidbtuning.protocolappnodeio ioa, apidbtuning.protocolappnodeio iob
 where seta.protocol_app_node_id in ($$visits_nf$$)
and $$use_relative_visits$$ = 1
and setb.protocol_app_node_id in ($$relative_visits_nf$$)
and seta.protocol_app_node_id = ioa.output_node_id
and setb.protocol_app_node_id = iob.output_node_id
and ioa.input_node_id = iob.input_node_id
and seta.protocol_app_node_id != setb.protocol_app_node_id
and setb.EUPATH_0000091 $$date_direction_fv$$ seta.EUPATH_0000091  
and abs(setb.EUPATH_0000091 - seta.EUPATH_0000091) >= $$days_between.min$$
and abs(setb.EUPATH_0000091 - seta.EUPATH_0000091) <= $$days_between.max$$
) main,
APIDBTUNING.CLINICALVISITATTRIBUTES ca, apidbtuning.participantattributes pa,
   (select min(EUPATH_0000113) as min_age, max(EUPATH_0000113) as max_age
   from apidbtuning.clinicalvisitattributes 
   where protocol_app_node_id in ($$visits_visitage_metadata_nf$$)
   ) age,
   (select da.protocol_app_node_id, round(avg(nvl(EUPATH_0000192,0)+nvl(EUPATH_0000193,0)+nvl(EUPATH_0000204,0)+nvl(EUPATH_0000205,0)),1) as ave_anoph
  from apidbtuning.householdattributes da, apidbtuning.protocolappnodeio io, apidbtuning.lighttrapattributes la
  where da.protocol_app_node_id = io.input_node_id
  and la.protocol_app_node_id = io.output_node_id
  and la.OBI_0001619 >= $$visit_date.min$$ 
  and la.OBI_0001619 <= $$visit_date.max$$ 
  group by da.protocol_app_node_id) mos, apidbtuning.protocolappnodeio iom
where ca.protocol_app_node_id = main.output_node_id
and pa.protocol_app_node_id = main.input_node_id
and iom.output_node_id = pa.protocol_app_node_id
and iom.input_node_id = mos.protocol_app_node_id(+)
group by pa.name, pa.EUPATH_0000152, pa.EUPATH_0000032, pa.EUPATH_0000151,age.max_age,age.min_age,mos.ave_anoph 
having count(*) / ((least(pa.EUPATH_0000152, $$visit_date.max$$, pa.EUPATH_0000032 + ( age.max_age * 365)) - 
       greatest(pa.EUPATH_0000151, $$visit_date.min$$, pa.EUPATH_0000032 + ( age.min_age * 365)) + 1) / 365) >= $$visits_per_year.min$$
 and count(*) / ((least(pa.EUPATH_0000152, $$visit_date.max$$, pa.EUPATH_0000032 + ( age.max_age * 365)) - 
       greatest(pa.EUPATH_0000151, $$visit_date.min$$, pa.EUPATH_0000032 + ( age.min_age * 365)) + 1) / 365) <= $$visits_per_year.max$$
 and round(exp(avg(case when ca.EUPATH_0000092 > 0.0 then ln(ca.EUPATH_0000092) else ln(0.00000000000001) end)),1) >= $$parasite_density.min$$
 and round(exp(avg(case when ca.EUPATH_0000092 > 0.0 then ln(ca.EUPATH_0000092) else ln(0.00000000000001) end)),1) <= $$parasite_density.max$$
                ]]>   
        </sql>
     </sqlQuery>

     <sqlQuery name="ParticipantsByCharWizRelVis_maled"
          isCacheable="true">
       <paramRef ref="participantParams.geographic_region_maled" default="ISASimple_Gates_MAL-ED_stdm_tp_RSRC" groupRef="metaDataGroups.geographic_loc"/>
       <paramRef ref="participantParams.participants_nf_maled" groupRef="metaDataGroups.part_characteristics"/>
       <paramRef ref="participantParams.households_nf_maled" groupRef="metaDataGroups.part_household_characteristics"/>
       <paramRef ref="participantParams.visits_nf_maled" groupRef="metaDataGroups.part_event_characteristics"/>
       <paramRef ref="clinicalVisitParams.use_relative_visits" groupRef="metaDataGroups.relative_events"/>
       <paramRef ref="clinicalVisitParams.days_between" groupRef="metaDataGroups.relative_events"/>
       <paramRef ref="clinicalVisitParams.date_direction_fv" groupRef="metaDataGroups.relative_events"/>
       <paramRef ref="clinicalVisitParams.dateOperator_fv" groupRef="metaDataGroups.relative_events"/>
       <paramRef ref="clinicalVisitParams.relative_visits_nf_maled" groupRef="metaDataGroups.relative_events"/>
       <paramRef ref="participantParams.visit_count" groupRef="metaDataGroups.event_summary_params"/>
       <paramRef ref="participantParams.dataset" visible="false" default="ISASimple_Gates_MAL-ED_stdm_tp_RSRC" groupRef="metaDataGroups.event_summary_params"/>
       <column name="source_id"/>
       <column name="project_id"/>
       <column name="ave_age_visit"/>
       <column name="visit_count"/>
         <sql>
           <![CDATA[
select pa.name, pa.name as source_id, 'ClinEpiDB' as project_id, 
                    count(*) as visit_count, 
   round(avg(EUPATH_0000644),1) -1 as ave_age_visit
from (select distinct io.input_node_id,io.output_node_id,ca.EUPATH_0000644 from apidbtuning.eventattributes ca, apidbtuning.protocolappnodeio io
      where ca.protocol_app_node_id in ($$visits_nf_maled$$)
      and ca.protocol_app_node_id = io.output_node_id
$$dateOperator_fv$$
 select ioa.input_node_id,ioa.output_node_id,seta.EUPATH_0000644
 from APIDBTUNING.eventattributes seta, APIDBTUNING.eventattributes setb, apidbtuning.protocolappnodeio ioa, apidbtuning.protocolappnodeio iob
 where seta.protocol_app_node_id in ($$visits_nf_maled$$)
and $$use_relative_visits$$ = 1
and setb.protocol_app_node_id in ($$relative_visits_nf_maled$$)
and seta.protocol_app_node_id = ioa.output_node_id
and setb.protocol_app_node_id = iob.output_node_id
and ioa.input_node_id = iob.input_node_id
and seta.protocol_app_node_id != setb.protocol_app_node_id
and setb.EUPATH_0000644 $$date_direction_fv$$ seta.EUPATH_0000644  
and abs(setb.EUPATH_0000644 - seta.EUPATH_0000644) >= $$days_between.min$$
and abs(setb.EUPATH_0000644 - seta.EUPATH_0000644) <= $$days_between.max$$
group by ioa.input_node_id,ioa.output_node_id,seta.EUPATH_0000644
) main, apidbtuning.participantattributes pa
where pa.protocol_app_node_id = main.input_node_id
group by pa.name 
having count(*) >= $$visit_count.min$$
and count(*) <= $$visit_count.max$$
                ]]>   
        </sql>
     </sqlQuery>

     <sqlQuery name="ParticipantsByTwoVisits_gems"
          isCacheable="true">
       <paramRef ref="participantParams.geographic_region_gems" groupRef="metaDataGroups.geographic_loc"/>
       <paramRef ref="participantParams.participant_dwelling_gems" groupRef="metaDataGroups.part_characteristics"/>
<!--       <paramRef ref="participantParams.enrollment_followup" groupRef="metaDataGroups.part_event_characteristics"/> -->
       <paramRef ref="participantParams.event_gems" groupRef="metaDataGroups.part_event_characteristics"/>
       <paramRef ref="clinicalVisitParams.use_relative_visits" groupRef="metaDataGroups.relative_events"/>
       <paramRef ref="clinicalVisitParams.dateOperator_fv" groupRef="metaDataGroups.relative_events"/>
       <paramRef ref="participantParams.relative_event_gems" groupRef="metaDataGroups.relative_events"/>
       <paramRef ref="participantParams.return_case_control" groupRef="metaDataGroups.case_control"/>
       <paramRef ref="participantParams.dataset" visible="false" default="ISASimple_Gates_GEMS_gems1_case_control_RSRC" groupRef="metaDataGroups.case_control"/> 
<!--       <paramRef ref="participantParams.dataset" visible="false" default="ISASimple_Gates_MAL-ED_stdm_tp_RSRC" groupRef="metaDataGroups.case_control"/> -->
       <column name="source_id"/>
       <column name="project_id"/>
         <sql>
           <![CDATA[
select 'eupath_1234' as source_id, 'Gates' as project_id from dual
                ]]>   
        </sql>
     </sqlQuery>

<!-- transform(s) -->

    <sqlQuery name="ParticipantsByHouseholdIds" doNotTest="true"
              displayName="ID" isCacheable="true">
      <paramRef ref="householdParams.household_result"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="household"/>
        <column name="wdk_weight"/>

        <sql>
            <![CDATA[
SELECT   pa.name as source_id , '@PROJECT_ID@' as project_id, da.name as household, wdk_weight
              FROM ($$household_result$$) source_set, ApidbTuning.protocolappnodeio io, apidbtuning.householdattributes da, apidbtuning.participantattributes pa
              WHERE source_set.source_id = da.name 
              AND da.protocol_app_node_id = io.input_node_id
              AND  io.output_node_id = pa.protocol_app_node_id
             ]]>
        </sql>
    </sqlQuery>
    
      <sqlQuery name="ParticipantsByClinicalVisits" doNotTest="true"
              displayName="ID" isCacheable="true">
      <paramRef ref="clinicalVisitParams.clinical_visit_result"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="num_of_visits"/>
        <column name="wdk_weight"/>

        <sql>
            <![CDATA[
SELECT   pa.name as source_id , '@PROJECT_ID@' as project_id, count(*) as num_of_visits , max(source_set.wdk_weight) as wdk_weight
              FROM ($$clinical_visit_result$$) source_set, ApidbTuning.protocolappnodeio io, apidbtuning.eventattributes cva, apidbtuning.participantattributes pa
              WHERE source_set.source_id = cva.name 
              AND cva.protocol_app_node_id = io.output_node_id
              AND  io.input_node_id = pa.protocol_app_node_id
              GROUP BY pa.name
             ]]>
        </sql>
    </sqlQuery>
                   

  </querySet>
</wdkModel>
