<wdkModel>

  <!-- notes

  -->

  <querySet name="ClinicalVisitId" queryType="id" isCacheable="false" excludeProjects="TrichDB">

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Source id  -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->



      <sqlQuery name="ClinicalVisitsBySourceID"
         isCacheable="true">
     <!-- <paramRef ref="participantParams.participantsBySourceID"/> -->
      <paramRef ref="clinicalVisitParams.clinical_visits_by_sourceid"/>
      <column name="source_id"/>
      <column name="project_id"/>
     <sql>
          <![CDATA[
Select distinct cv.name as source_id, '@PROJECT_ID@' as project_id from  APIDBTUNING.CLINICALVISITATTRIBUTES cv,
($$clinical_visits_by_sourceid$$) cs where cv.name = cs.source_id
               ]]>   
       </sql>
    </sqlQuery>

     <sqlQuery name="ClinicalVisitsByRelativeVisits"
          isCacheable="true">
       <paramRef ref="clinicalVisitParams.geographic_region" groupRef="metaDataGroups.geographic_loc"/>
       <paramRef ref="clinicalVisitParams.visit_date" groupRef="metaDataGroups.daterange"/>
       <paramRef ref="participantParams.duration_observation" groupRef="metaDataGroups.daterange"/>  
       <paramRef ref="clinicalVisitParams.visits_visitage_metadata_nf" groupRef="metaDataGroups.daterange"/>
       <paramRef ref="clinicalVisitParams.participants_nf" groupRef="metaDataGroups.part_characteristics"/>
       <paramRef ref="clinicalVisitParams.dwellings_nf" groupRef="metaDataGroups.part_dwelling_characteristics"/>
       <paramRef ref="clinicalVisitParams.visits_nf" groupRef="metaDataGroups.part_visit_characteristics"/>
       <paramRef ref="clinicalVisitParams.use_relative_visits" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="clinicalVisitParams.days_between" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="clinicalVisitParams.date_direction_fv" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="clinicalVisitParams.dateOperator_fv" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="clinicalVisitParams.relative_visits_nf" groupRef="metaDataGroups.relative_visits"/>
       <paramRef ref="participantParams.dataset" visible="false" default="ISASimple_ICEMR_PRISM_surveillance_RSRC" groupRef="metaDataGroups.part_visit_characteristics"/>
       <column name="source_id"/>
       <column name="project_id"/>
       <column name="min_days_between"/>
       <column name="num_matching_visits"/> 
       <sql>
           <![CDATA[
with vis as (
select distinct ca.protocol_app_node_id, ca.name, io.input_node_id ,ca.EUPATH_0000091 
from APIDBTUNING.CLINICALVISITATTRIBUTES ca,apidbtuning.protocolappnodeio io
where ca.protocol_app_node_id in ($$visits_nf$$)
and ca.protocol_app_node_id = io.output_node_id
),
relvis as (
select distinct ca.protocol_app_node_id, ca.name, io.input_node_id ,ca.EUPATH_0000091 
from APIDBTUNING.CLINICALVISITATTRIBUTES ca,apidbtuning.protocolappnodeio io
where ca.protocol_app_node_id in ($$relative_visits_nf$$)
and ca.protocol_app_node_id = io.output_node_id
),
visits as (
select * from vis
$$dateOperator_fv$$
select vis.protocol_app_node_id,vis.name, vis.input_node_id,vis.EUPATH_0000091
from vis, relvis rv
where $$use_relative_visits$$ = 1
and vis.input_node_id = rv.input_node_id
and vis.protocol_app_node_id != rv.protocol_app_node_id
and rv.EUPATH_0000091 $$date_direction_fv$$ vis.EUPATH_0000091
and abs(rv.EUPATH_0000091 - vis.EUPATH_0000091) >= $$days_between.min$$
and abs(rv.EUPATH_0000091 - vis.EUPATH_0000091) <= $$days_between.max$$
)
select name as source_id,'ClinEpiDB' as project_id
, CASE WHEN '$$dateOperator_fv$$' = 'MINUS' THEN null ELSE min(days_between) END as min_days_between,CASE WHEN '$$dateOperator_fv$$' = 'MINUS' THEN null ELSE count(*) end as num_matching_visits
from (
select visits.protocol_app_node_id,visits.name,visits.input_node_id as parent_id,visits.EUPATH_0000091, abs(inter.EUPATH_0000091 - visits.EUPATH_0000091) as days_between
from (
select vis.protocol_app_node_id,vis.name, vis.input_node_id,rv.EUPATH_0000091
from vis, relvis rv
where vis.input_node_id = rv.input_node_id
and vis.protocol_app_node_id != rv.protocol_app_node_id
and rv.EUPATH_0000091 $$date_direction_fv$$ vis.EUPATH_0000091
and abs(rv.EUPATH_0000091 - vis.EUPATH_0000091) >= $$days_between.min$$
and abs(rv.EUPATH_0000091 - vis.EUPATH_0000091) <= $$days_between.max$$
) inter, visits
where visits.protocol_app_node_id = inter.protocol_app_node_id(+)
)
group by name
                ]]>   
        </sql>
     </sqlQuery>

     <sqlQuery name="ClinicalVisitsByRelativeVisits_maled"
          isCacheable="true">
       <paramRef ref="clinicalVisitParams.geographic_region_maled" groupRef="metaDataGroups.geographic_loc"/>
       <paramRef ref="clinicalVisitParams.participants_nf_maled" groupRef="metaDataGroups.part_characteristics"/>
       <paramRef ref="clinicalVisitParams.dwellings_nf_maled" groupRef="metaDataGroups.part_dwelling_characteristics"/>
       <paramRef ref="clinicalVisitParams.visits_nf_maled" groupRef="metaDataGroups.event_characteristics"/>
       <paramRef ref="clinicalVisitParams.use_relative_visits" groupRef="metaDataGroups.relative_events"/>
       <paramRef ref="clinicalVisitParams.days_between" groupRef="metaDataGroups.relative_events"/>
       <paramRef ref="clinicalVisitParams.date_direction_fv" groupRef="metaDataGroups.relative_events"/>
       <paramRef ref="clinicalVisitParams.dateOperator_fv" groupRef="metaDataGroups.relative_events"/>
       <paramRef ref="clinicalVisitParams.relative_visits_nf_maled" groupRef="metaDataGroups.relative_events"/>
       <paramRef ref="participantParams.dataset" visible="false" default="ISASimple_ICEMR_PRISM_surveillance_RSRC" groupRef="metaDataGroups.relative_events"/>
       <paramRef ref="clinicalVisitParams.visits_visitage_metadata_nf_maled" visible="false" groupRef="metaDataGroups.relative_events"/>
       <column name="source_id"/>
       <column name="project_id"/>
       <column name="min_days_between"/>
       <column name="num_matching_visits"/> 
       <sql>
           <![CDATA[
with vis as (
select distinct ca.protocol_app_node_id, ca.name, io.input_node_id ,ca.EUPATH_0000644 
from APIDBTUNING.EventATTRIBUTES ca,apidbtuning.protocolappnodeio io
where ca.protocol_app_node_id in ($$visits_nf_maled$$)
and ca.protocol_app_node_id = io.output_node_id
),
relvis as (
select distinct ca.protocol_app_node_id, ca.name, io.input_node_id ,ca.EUPATH_0000644 
from APIDBTUNING.EventATTRIBUTES ca,apidbtuning.protocolappnodeio io
where ca.protocol_app_node_id in ($$relative_visits_nf_maled$$)
and ca.protocol_app_node_id = io.output_node_id
),
visits as (
select * from vis
$$dateOperator_fv$$
select vis.protocol_app_node_id,vis.name, vis.input_node_id,vis.EUPATH_0000644
from vis, relvis rv
where $$use_relative_visits$$ = 1
and vis.input_node_id = rv.input_node_id
and vis.protocol_app_node_id != rv.protocol_app_node_id
and rv.EUPATH_0000644 $$date_direction_fv$$ vis.EUPATH_0000644
and abs(rv.EUPATH_0000644 - vis.EUPATH_0000644) >= $$days_between.min$$
and abs(rv.EUPATH_0000644 - vis.EUPATH_0000644) <= $$days_between.max$$
)
select name as source_id,'ClinEpiDB' as project_id
, CASE WHEN '$$dateOperator_fv$$' = 'MINUS' THEN null ELSE min(days_between) END as min_days_between,CASE WHEN '$$dateOperator_fv$$' = 'MINUS' THEN null ELSE count(*) end as num_matching_visits
from (
select visits.protocol_app_node_id,visits.name,visits.input_node_id as parent_id,visits.EUPATH_0000644, abs(inter.EUPATH_0000644 - visits.EUPATH_0000644) as days_between
from (
select vis.protocol_app_node_id,vis.name, vis.input_node_id,rv.EUPATH_0000644
from vis, relvis rv
where vis.input_node_id = rv.input_node_id
and vis.protocol_app_node_id != rv.protocol_app_node_id
and rv.EUPATH_0000644 $$date_direction_fv$$ vis.EUPATH_0000644
and abs(rv.EUPATH_0000644 - vis.EUPATH_0000644) >= $$days_between.min$$
and abs(rv.EUPATH_0000644 - vis.EUPATH_0000644) <= $$days_between.max$$
) inter, visits
where visits.protocol_app_node_id = inter.protocol_app_node_id(+)
)
group by name
                ]]>   
        </sql>
     </sqlQuery>


     <sqlQuery name="ClinicalVisitsByAllData"
          isCacheable="true">
       <paramRef ref="clinicalVisitParams.geographic_region" groupRef="metaDataGroups.geographic_loc"/>
       <paramRef ref="clinicalVisitParams.visit_date" groupRef="metaDataGroups.daterange"/>
       <paramRef ref="participantParams.duration_observation" groupRef="metaDataGroups.daterange"/>  
       <paramRef ref="clinicalVisitParams.visits_visitage_metadata_nf" groupRef="metaDataGroups.daterange"/>
       <paramRef ref="clinicalVisitParams.participants_nf" groupRef="metaDataGroups.part_characteristics"/>
       <paramRef ref="clinicalVisitParams.dwellings_nf" groupRef="metaDataGroups.part_dwelling_characteristics"/>
       <paramRef ref="clinicalVisitParams.visits_nf" groupRef="metaDataGroups.part_visit_characteristics"/>
       <paramRef ref="participantParams.dataset" visible="false" default="ISASimple_ICEMR_PRISM_surveillance_RSRC" groupRef="metaDataGroups.part_visit_characteristics"/>
       <column name="source_id"/>
       <column name="project_id"/>
       <sql>
           <![CDATA[
select name as source_id,'ClinEpiDB' as project_id
from APIDBTUNING.CLINICALVISITATTRIBUTES
where protocol_app_node_id in ($$visits_nf$$)
                ]]>   
        </sql>
     </sqlQuery>


     <!-- Transform -->
     
     <sqlQuery name="VisitsByParticipantIds" doNotTest="true" displayName="ID"
               isCacheable="true">
       <paramRef ref="participantParams.participant_result"/>
       <column name="project_id"/>
       <column name="source_id"/>     
       <column name="participant"/>
       <column name="wdk_weight"/>

        <sql>
          <![CDATA[
 SELECT   cva.name as source_id , '@PROJECT_ID@' as project_id, pa.name as participant, wdk_weight
              FROM ($$participant_result$$) source_set, ApidbTuning.protocolappnodeio io, apidbtuning.clinicalvisitattributes cva, apidbtuning.participantattributes pa
              WHERE source_set.source_id = pa.name 
              AND pa.protocol_app_node_id = io.input_node_id
              AND  io.output_node_id = cva.protocol_app_node_id
               ]]>   
       </sql>
    </sqlQuery>                
          
  </querySet>
</wdkModel>

